{
  "version": 3,
  "sources": [
    "../node_modules/browser-pack/_prelude.js",
    "../src/factory/hql-factory.js",
    "../src/factory/index.js",
    "../src/factory/query-model-factory.js",
    "../src/filter/filter-core.js",
    "../src/filter/filter.js",
    "../src/filter/index.js",
    "../src/index.js",
    "../src/query/query.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict';\n\nHQLFactory.$inject = ['$filter'];\n\nfunction HQLFactory($filter){\n  /*\n    Regex de URL foi retirada do código-fonte do AngularJS, utilizado por eles para validar input[type=\"url\"].\n    LINK: https://github.com/angular/angular.js/blob/master/src/ng/directive/input.js#L26\n   */\n  const CPF_REGEX       = /[0-9]{3}\\.[0-9]{3}\\.[0-9]{3}\\-[0-9]{2}/,\n        CNPJ_REGEX      = /[0-9]{2}\\.?[0-9]{3}\\.?[0-9]{3}\\/?[0-9]{4}\\-?[0-9]{2}/,\n        DATE_REGEX      = /[0-9]{2}\\/[0-9]{2}\\/[0-9]{4}/,\n        URL_REGEX       = /^[a-z][a-z\\d.+-]*:\\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\\s:/?#]+|\\[[a-f\\d:]+\\])(?::\\d+)?(?:\\/[^?#]*)?(?:\\?[^#]*)?(?:#.*)?$/i,\n        IP_REGEX        = /(?:[0-9]{1,3}\\.){3}[0-9]{1,3}/,\n        NUMBER_REGEX    = /^[0-9]+$/,\n        FLOAT_REGEX     = /^[0-9]+(\\.[0-9]{1,2})?$/\n\n  let SUPPORTED_TYPES = {}\n\n  SUPPORTED_TYPES['string'] = {\n    validator: (string) => (typeof string === 'string' || string instanceof String),\n    defaultCondition: hqlObjectCreator(['contains']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'contains', 'not_contains', 'starts_with', 'ends_with']),\n    template: `<div class=\"input-group\">\n                  <input type=\"text\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" class=\"form-control\" required autofocus style=\" width: 150px;height: 40px;\" />\n                  <div class=\"input-group-addon\">\n                      <i ng-show=\"validator($value.query.value) && $value.query.value.length > 0\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                      <i ng-show=\"!validator($value.query.value) || !$value.query.value\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                  </div>\n                  <div class=\"input-group-addon\">\n                      <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                  </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['number'] = {\n    validator: (str) => (NUMBER_REGEX.test(str)),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'gt', 'ge', 'lt', 'le']),\n    template: `<div class=\"input-group\">\n                    <input type=\"text\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" class=\"form-control\" gumga-number required style=\" width: 150px;height: 40px;\" />\n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value)\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value)\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\"  class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['float'] = {\n    validator: (number) => (FLOAT_REGEX.test(number)),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'gt', 'ge', 'lt', 'le']),\n    template: `<div class=\"input-group\">\n                    <input type=\"text\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" class=\"form-control\" gumga-number required style=\" width: 150px;height: 40px;\"/>                    \n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value)\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value)\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['money'] = {\n    validator: (number) => (FLOAT_REGEX.test(number)),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'gt', 'ge', 'lt', 'le']),\n    template: `<div class=\"input-group\">\n                    <input ng-keyup=\"goSearch($event)\" type=\"text\" ng-model=\"$value.query.value\" gumga-mask=\"R$ \" class=\"form-control\" gumga-number required style=\" width: 150px;height: 40px;\" />\n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value)\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value)\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['cpf'] = {\n    validator: (cpf) => (CPF_REGEX.test(utils.toCpf(cpf))),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'contains', 'not_contains', 'starts_with', 'ends_with']),\n    template: `<div class=\"input-group\">\n                    <input type=\"text\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" gumga-mask=\"999.999.999.99\" class=\"form-control\" required style=\" width: 150px;height: 40px;\" />\n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value) && $value.query.value.length > 0\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value) || !$value.query.value\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['cnpj'] = {\n    validator: (cnpj) => (CNPJ_REGEX.test(cnpj)),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'contains', 'not_contains', 'starts_with', 'ends_with']),\n    template: `<div class=\"input-group\">\n                    <input type=\"text\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" gumga-mask=\"99.999.999/9999-99\" class=\"form-control\" required style=\" width: 150px;height: 40px;\" />\n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value) && $value.query.value.length > 0\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value) || !$value.query.value\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['boolean'] = {\n    validator: (boolean) => (boolean == 'true' || boolean == 'false'),\n    defaultCondition: hqlObjectCreator(['is']),\n    conditions: hqlObjectCreator(['is']),\n    template: ` <div class=\"radio\"><label><input  type=\"radio\" ng-model=\"$value.query.value\" value=\"true\"> {{$value.query.attribute.extraProperties.trueLabel}}</label></div><div class=\"radio\"><label><input type=\"radio\" ng-model=\"$value.query.value\" value=\"false\"> {{$value.query.attribute.extraProperties.falseLabel}} </label></div>`\n  }\n\n  SUPPORTED_TYPES['date'] = {\n    validator: (date) => (DATE_REGEX.test($filter('date')(date, 'dd/MM/yyyy'))),\n    defaultCondition: hqlObjectCreator(['date_eq']),\n    conditions: hqlObjectCreator(['date_eq', 'date_ne', 'gt', 'ge', 'lt', 'le']),\n    template: `<div class=\"input-group\">\n                    <input type=\"text\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" gumga-mask=\"99/99/9999\" class=\"form-control\" required  style=\" width: 150px;height: 40px;\"/>\n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value) && $value.query.value.length > 0\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value) || !$value.query.value\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['select'] = {\n    validator: (value) => (!!value),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne']),\n    template: `<select ng-model=\"$value.query.value\" ng-options=\"d.field as d.label for d in $value.query.attribute.extraProperties.data track by d.field\" class=\"form-control\" required /></select>`\n  }\n\n  SUPPORTED_TYPES['enum'] = {\n    validator: (enumList) => (Array.isArray(enumList)),\n    defaultCondition: hqlObjectCreator(['in']),\n    conditions: hqlObjectCreator(['in']),\n    template: `<div class=\"col-md-4\" ng-class=\"{'row': $index % 3 == 0}\" ng-repeat=\"d in $value.query.attribute.extraProperties.data\"><label><input type=\"checkbox\" ng-checked=\"$value.query.value.indexOf(d.field) > -1\" ng-click=\"toggleEnum($event, $key, d.field)\"></label> {{d.label}}</div>`\n  }\n\n  SUPPORTED_TYPES['email'] = {\n    validator: (emailAddress) => (typeof emailAddress === 'string' || emailAddress instanceof String),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'contains', 'not_contains', 'starts_with', 'ends_with']),\n    template: `<div class=\"input-group\">\n                    <input type=\"text\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" class=\"form-control\" required  style=\" width: 150px;height: 40px;\" />\n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value) && $value.query.value.length > 0\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value) || !$value.query.value\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['url'] = {\n    validator: (url) => (URL_REGEX.test(url)),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'contains', 'not_contains', 'starts_with', 'ends_with']),\n    template: `<div class=\"input-group\">\n                    <input type=\"url\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" class=\"form-control\" required  style=\" width: 150px;height: 40px;\" />\n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value) && $value.query.value.length > 0\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value) || !$value.query.value\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['ip'] = {\n    validator: (ip) => (IP_REGEX.test(ip)),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'contains', 'not_contains', 'starts_with', 'ends_with']),\n    template: `<div class=\"input-group\">\n                    <input type=\"text\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" class=\"form-control\" required style=\" width: 150px;height: 40px;\" />\n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value) && $value.query.value.length > 0\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value) || !$value.query.value\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  function useType(type) {\n    return SUPPORTED_TYPES[type] || null;\n  }\n\n  function hqlObjectCreator(hqls = [], hqlObjects = {}){\n    hqlObjects['contains']      = { hql: ` contains `     , label:  ` contém `        , before: ` like '%`     , after:  `%'` }\n    hqlObjects['not_contains']  = { hql: ` not_contains ` , label:  ` não contém `    , before: ` not like '%` , after:  `%'` }\n    hqlObjects['starts_with']   = { hql: ` starts_with `  , label:  ` começa com `    , before: ` like '`      , after:  `%'` }\n    hqlObjects['ends_with']     = { hql: ` ends_with `    , label:  ` termina com `   , before: ` like '%`     , after:  `'` }\n    hqlObjects['eq']            = { hql: ` eq `           , label:  ` igual `         , before: ` = '`         , after:  `'` }\n    hqlObjects['ne']            = { hql: ` ne `           , label:  ` diferente de `  , before: ` != '`        , after:  `'` }\n    hqlObjects['ge']            = { hql: ` ge `           , label:  ` maior igual `   , before: ` >= '`        , after:  `'` }\n    hqlObjects['gt']            = { hql: ` gt `           , label:  ` maior que `     , before: ` >   `        , after:  `` }\n    hqlObjects['le']            = { hql: ` le `           , label:  ` menor igual `   , before: ` <=  `        , after:  `` }\n    hqlObjects['lt']            = { hql: ` lt `           , label:  ` menor que `     , before: ` < '`         , after:  `'` }\n    hqlObjects['in']            = { hql: ` in `           , label:  ` em`             , before: ` in (`        , after:  `)` }\n    hqlObjects['is']            = { hql: ` is `           , label:  ` está `          , before: ` is `         , after:  `` }\n    hqlObjects['date_eq']       = { hql: ` eq `           , label:  ` igual `         , before: ` >= `         , after:  `` }\n    hqlObjects['date_ne']       = { hql: ` ne `           , label:  ` diferente de `  , before: ` <= `         , after:  `` }\n    // hqlObjects['date_eq']       = { hql: ` date_eq`       , label:  ` no dia `        , before: ` `}\n    return hqls.map(value => hqlObjects[value])\n  }\n\n  function createHql(mapObj = {}){\n    let aqo = []\n    let aq =\n      Object\n        .keys(mapObj)\n        .filter(value => mapObj[value].active && mapObj[value].query.value)\n        .map(val => {\n          let attribute = 'obj.'.concat(mapObj[val].query.attribute ? mapObj[val].query.attribute.field : '*'),\n              before    = mapObj[val].query.condition ? mapObj[val].query.condition.before : '*',\n              value     = mapObj[val].query.value.replace ? mapObj[val].query.value.replace(/'/g,\"''\") : mapObj[val].query.value,\n              after     = mapObj[val].query.condition ? mapObj[val].query.condition.after : '*';\n\n            if (mapObj[val].query.attribute) {\n              switch (mapObj[val].query.attribute.type) {\n                case 'date':\n                  let date = value.split('')\n                  value = `${date[4]}${date[5]}${date[6]}${date[7]}-${date[2]}${date[3]}-${date[0]}${date[1]}`\n\n                  // if (mapObj[val].query.condition.hql == ' eq ' || mapObj[val].query.condition.hql == ' ne ') {\n                    let valueBefore = `'${value} 00:00:00'`,\n                        valueAfter  = `'${value} 23:59:59'`\n\n                    switch (mapObj[val].query.condition.hql) {\n                      case ' eq ':\n                        value = `${valueBefore} AND ${attribute} <= ${valueAfter}`\n                        break;\n                      case ' ne ':\n                        value = `${valueBefore} OR ${attribute} >= ${valueAfter}`\n                        break;\n                      case ' le ':\n                        value = valueAfter;\n                        break;\n                      case ' gt ':\n                        value = valueAfter;\n                        break;\n                    }\n                  // }\n                  // value = $filter('date')(new Date($filter('gumgaGenericFilter')(value, 'date')),'yyyy-MM-dd')\n                  // value = $filter('gumgaGenericFilter')(value, 'date')\n\n                  value = value\n                  break;\n                case 'enum':\n                  value = `'${mapObj[val].query.value.join(\"','\")}'`;\n                  break;\n                case 'number':\n                case 'float':\n                case 'money':\n                  before    = before.replace(/'/g, '');\n                  after     = after.replace(/'/g, '');\n                  break;  \n              }\n            }\n\n            aqo.push({\n              attribute:  mapObj[val].query.attribute,\n              condition:  mapObj[val].query.condition,\n              value:      mapObj[val].query.value.replace ? mapObj[val].query.value.replace(/'/g,\"''\") : mapObj[val].query.value\n            })\n\n\n        return (attribute.concat(before).concat(value).concat(after)).replace(/obj.\\*/g,'').replace(/\\*/g,'')\n      })\n      .filter((item, idx, ary) => {\n        var operators = [\"OR\", \"AND\"];\n\n        if (operators.indexOf(item) === -1)\n          return true;\n\n        var previousValue = ary[idx - 1];        \n        var nextValue = ary[idx + 1];        \n        if ((previousValue !== undefined && operators.indexOf(previousValue) === -1)\n          && (nextValue !== undefined && operators.indexOf(nextValue) === -1))\n          return true;\n\n        return false;\n      })      \n      .join(' ')\n\n    if(aq.slice(-2) === 'ND' || aq.slice(-2) === 'OR'){\n      aqo.pop()\n      return { hql: aq.slice(0, -3), source: JSON.stringify(aqo)  }\n    }\n    \n    if (aq) {\n      return { hql: aq, source: JSON.stringify(aqo) }\n    }    \n\n    return {}\n  }\n\n\n  let utils = {\n    toCpf(input){\n      let str = input+ '';\n      return str.replace(/\\D/g,'').replace(/(\\d{3})(\\d)/,\"$1.$2\").replace(/(\\d{3})(\\d)/,\"$1.$2\").replace(/(\\d{3})(\\d{1,2})$/,\"$1-$2\");\n    }\n  }\n\n  function validator(type = ' '){\n    return SUPPORTED_TYPES[type] ? SUPPORTED_TYPES[type].validator : angular.noop\n  }\n\n  return { useType , hqlObjectCreator, createHql, validator };\n\n}\n\nangular.module('gumga.queryfilter.factory.hql', [])\n  .factory('HQLFactory', HQLFactory);\n",
    "'use strict';\n\nrequire('./hql-factory.js')\nrequire('./query-model-factory.js')\n\nangular\n  .module('gumga.queryfilter.factory'\n  ,['gumga.queryfilter.factory.hql','gumga.queryfilter.factory.querymodel']);",
    "'use strict';\n\nQueryModelFactory.$inject = [];\n\nfunction QueryModelFactory(){\n\n  function QueryModel(query = {}, active = true, initialState = 'NOTHING', zIndex = 999) {\n    this.STATES = Object.freeze({\n      NOTHING:                  1,  // 0000001\n      ONLY_ATTRIBUTE:           2,  // 0000010\n      ATTRIBUTE_AND_CONDITION:  4,  // 0000100\n      EVERYTHING_NEEDED:        8,  // 0001000\n      UPDATING_ATTRIBUTE:       16, // 0010000\n      UPDATING_CONDITION:       32, // 0100000\n      UPDATING_VALUE:           64  // 1000000\n    })\n    this.query                      = query\n    this.active                     = active\n    this.activeStates               = this.STATES[initialState]\n    this.zIndex                     = zIndex\n  };\n\n  // Functions\n\n  QueryModel.prototype.addState = function (newState){\n    this.activeStates |= this.STATES[newState]\n    return this\n  }\n  QueryModel.prototype.removeState = function (stateToRemove){\n    this.activeStates &= ~this.STATES[stateToRemove]\n    return this\n  }\n\n  // Checking Functions\n\n  QueryModel.prototype.isNOTHING  =function(){\n     return (this.activeStates & this.STATES['NOTHING']) != 0\n   }\n  QueryModel.prototype.isONLY_ATTRIBUTE = function(){\n     return (this.activeStates & this.STATES['ONLY_ATTRIBUTE']) != 0\n   }\n  QueryModel.prototype.isATTRIBUTE_AND_CONDITION = function(){\n     return (this.activeStates & this.STATES['ATTRIBUTE_AND_CONDITION']) != 0\n   }\n  QueryModel.prototype.isEVERYTHING_NEEDED = function(){\n     return (this.activeStates & this.STATES['EVERYTHING_NEEDED']) != 0\n   }\n  QueryModel.prototype.isUPDATING_ATTRIBUTE = function(){\n     return (this.activeStates & this.STATES['UPDATING_ATTRIBUTE']) != 0\n   }\n  QueryModel.prototype.isUPDATING_CONDITION = function(){\n     return (this.activeStates & this.STATES['UPDATING_CONDITION']) != 0\n   }\n  QueryModel.prototype.isUPDATING_VALUE = function(){\n     return (this.activeStates & this.STATES['UPDATING_VALUE']) != 0\n   }\n\n   QueryModel.prototype.isBeingUpdated = function(){\n     return this.isUPDATING_VALUE()\n   }\n\n  return {\n    create(...param) {\n      return new QueryModel(...param);\n    }\n  }\n}\n\nangular.module('gumga.queryfilter.factory.querymodel', [])\n  .factory('QueryModelFactory', QueryModelFactory);\n",
    "\n'use strict'\n\nFilter.$inject = ['HQLFactory', '$compile', '$timeout', '$interpolate', 'QueryModelFactory']\nfunction Filter(HQLFactory, $compile, $timeout, $interpolate, QueryModelFactory) {\n  let template = `\n        <style>\n          .gumga-filter .dropdown-menu > li > a {\n            cursor: pointer;\n          }\n          .gumga-filter .panel-body .input-group-btn {\n            border: 1px solid #ccc;\n            border-left-width: 2px;\n            border-right-width: 2px;\n            border-radius: 4px;\n          }\n          .gumga-filter .panel-body .input-group-btn .btn {\n            border-color: transparent;\n            border-radius: 4px;\n            border: 1px;\n          }\n          .gumga-filter .panel-body .btn,\n          .gumga-filter .panel-body .input-group-btn .btn {\n            padding: 3px 6px;\n          }\n          .gumga-filter-panel {\n            position: absolute;\n            top: 100%;\n            left: 0;\n            z-index: 1000;\n            display: none;\n            float: left;\n            min-width: 160px;\n            padding: 12px;\n            margin: 2px 0 0;\n            font-size: 14px;\n            text-align: left;\n            background-color: #fff;\n            border: 1px solid #ccc;\n            border: 1px solid rgba(0,0,0,.15);\n            border-radius: 4px;\n            box-shadow: 0 6px 12px rgba(0,0,0,.175);\n            background-clip: padding-box;\n          }\n          .gumga-filter-panel .dropdown-menu li {\n            z-index: 3000;\n            position: absolute;\n            top: 100%;\n            left: 0;\n            z-index: 1000;\n            display: none;\n            float: left;\n            min-width: 160px;\n            padding: 12px;\n            margin: 2px 0 0;\n            font-size: 14px;\n            text-align: left;\n            background-color: #fff;\n            border: 1px solid #ccc;\n            border: 1px solid rgba(0,0,0,.15);\n            border-radius: 4px;\n            box-shadow: 0 6px 12px rgba(0,0,0,.175);\n            background:-clip padding-box;\n          }\n          gumga-filter .panel.heading {\n            padding: 5px 10px;\n          }\n          gumga-filter .form-inline.panel-body .input-group {\n            margin-right: 5px;\n          }\n          gumga-filter .form-inline.panel-body .input-group-btn > button,\n          gumga-filter .form-inline.panel-body .input-group-btn > btn-group > button[uib-dropdown-toggle] {\n            z-index: 0;\n          }\n          gumga-filter .form-inline.panel-body .input-group-btn > btn-group > ul[uib-dropdown-menu],\n          gumga-filter .form-inline.panel-body .input-group-btn > btn-group > ul[uib-dropdown-menu] > li {\n            z-index: 3000;\n          }\n          gumga-filter .btn-group.dropdown .glyphicon {\n            top: 3px;\n          }\n          gumga-query .row.replace-filter {\n            margin-top: .5%;\n          }\n        </style>\n        <div class=\"gumga-filter panel panel-default\" >\n            <header class=\"panel-heading\" style=\"padding: 5px 10px;\">\n                <div class=\"row\">\n                    <div class=\"col-md-8 col-xs-7\">\n                        <h5>Pesquisa avançada <strong ng-if=\"filterSelectItem\"> - {{filterSelectItem.description}}</strong></h5>\n                    </div>\n                    <div class=\"col-md-4 col-xs-5\" ng-show=\"saveQuery\">\n                        <div class=\"input-group\" >\n                            <input type=\"text\" ng-model=\"nameSearch\" class=\"form-control\" id=\"_save\" ng-show=\"saveFilterOpen\" ng-keyup=\"saveSearch(nameSearch, $event)\" ng-blur=\"closeInput()\">\n                            <div class=\"input-group-btn\">\n                                <button class=\"btn btn-success\" ng-show=\"saveFilterOpen\" ng-click=\"saveSearch(nameSearcht)\" ng-disabled=\"!nameSearch\">\n                                    <i class=\"glyphicon glyphicon-floppy-saved\"></i>\n                                </button>\n                                <button class=\"btn btn-default pull-right\" type=\"button\" ng-hide=\"saveFilterOpen\" ng-click=\"showInput()\" ng-disabled=\"!isAnyQueryNotOk()\">\n                                    <i class=\"glyphicon glyphicon-floppy-disk\"></i>\n                                </button>\n                                <button class=\"btn btn-default\"  ng-click=\"deleteFilter(filterSelectItem.id)\" ng-if=\"filterSelectItem\" style=\"float: right;margin-right: 15px;\">\n                                    <i class=\"glyphicon glyphicon-floppy-remove\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n            <div class=\"form-inline panel-body\">\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <h5><strong>Filtrar por:</strong></h5>\n                </div>\n                <div class=\"col-md-6\">\n                  <button id=\"single-button\" type=\"button\" class=\"btn btn-default pull-right\" ng-click=\"clearQuery()\" ng-disabled=\"!isAnyQueryNotOk()\" >\n                    <i class=\"glyphicon glyphicon-repeat\"></i> Limpar filtros\n                  </button>\n                </div>\n              </div>\n              <div class=\"input-group\" ng-repeat=\"($key, $value) in controlMap\" style=\"margin-right: 1%;margin-top: 7.5px;z-index: {{$value.zIndex}}\" ng-show=\"$value.active\" id=\"first\" >\n                  <div class=\"input-group-btn\">\n                    <div class=\"btn-group\" uib-dropdown ng-show=\"!$value.query.label\" is-open=\"$value.isUPDATING_ATTRIBUTE()\" auto-close=\"disabled\">\n                      <button type=\"button\" style=\"z-index: 0\" class=\"btn btn-default\" uib-dropdown-toggle ng-click=\"toggleUpdatingAttribute(this)\" ng-disabled=\"$value.isUPDATING_VALUE() || $value.isUPDATING_CONDITION() || (!isAnyQueryNotOk() && $value.isEVERYTHING_NEEDED()) \">\n                        <span> {{ $value.query.attribute.label || 'Atributo' }}  <i class=\"glyphicon glyphicon-chevron-down\"></i></span>\n                      </button>\n                      <ul uib-dropdown-menu style=\"z-index: 3000\" role=\"menu\">\n                        <li style=\"z-index: 3000;\" role=\"menuitem\" ng-repeat=\"attribute in _attributes track by $index\">\n                          <a ng-click=\"addAttribute(attribute, this.$parent, $key)\">{{attribute.label}}</a>\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"btn-group\" uib-dropdown is-open=\"$value.isUPDATING_CONDITION()\" ng-show=\"!$value.query.label\" auto-close=\"disabled\">\n                      <button type=\"button\" class=\"btn btn-default\" uib-dropdown-toggle ng-click=\"toggleUpdatingCondition(this)\" ng-disabled=\"$value.isUPDATING_VALUE() || $value.isUPDATING_ATTRIBUTE() || (!isAnyQueryNotOk() && $value.isEVERYTHING_NEEDED()) || $value.isNOTHING()\">\n                          <span>{{ $value.query.condition.label || 'Condição' }} <i class=\"glyphicon glyphicon-chevron-down\"></i></span>\n                      </button>\n                      <ul uib-dropdown-menu role=\"menu\" >\n                        <li role=\"menuitem\" ng-repeat=\"condition in conditions track by $index\">\n                          <a ng-click=\"addCondition(condition, this.$parent, $key)\">{{condition.label}}</a>\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"btn-group\" id=\"_btnValue{{$key}}\" ng-show=\"!$value.query.label\">\n                      <button type=\"button\" class=\"btn btn-default\" ng-click=\"toggleUpdatingValue(this, $key)\" ng-disabled=\"validatonValue($value)\" id=\"_valueLabel{{$key}}\">\n                          <span id=\"_conditionLabel{{$key}}\">{{ $value.query.value ? $value.query.value.push && $value.query.value.length > 0  ?  $value.query.value.join(', ') : $value.query.value : 'valor' | gumgaGenericFilter:$value.query.attribute.type}} </span>\n                      </button>\n                      <div class=\"gumga-filter-panel\" id=\"_panelValue{{$key}}\"></div>\n                    </div>\n                    <div class=\"btn-group\" ng-show=\"$value.query.label\">\n                      <button type=\"button\" class=\"btn btn-default\" ng-click=\"updateOperator(this)\" ng-disabled=\"!isAnyQueryNotOk()\">\n                        <span> {{$value.query.label}} </span>\n                      </button>\n                    </div>\n                    <button type=\"button\" style=\"z-index: 0;border-left: 1px solid #ccc; \" class=\"btn btn-default\" ng-click=\"removeQuery(this, $event, $index)\" ng-show=\"!$value.query.label\" ng-disabled=\"!$value.isEVERYTHING_NEEDED() || $value.isUPDATING_VALUE() ||(!isAnyQueryNotOk() && $value.isEVERYTHING_NEEDED()) \">\n                      <span class=\"glyphicon glyphicon-remove\"></span>\n                    </button>\n                    </div>\n                  </div>\n                  <button id=\"single-button\" type=\"button\" class=\"btn btn-default\" ng-click=\"addQuery()\" ng-disabled=\"!isAnyQueryNotOk()\" style=\"margin-top: 7.5px;\" >\n                    <span class=\"glyphicon glyphicon-plus\"></span>\n                  </button>\n                </div>\n              </div>\n            </div>\n        </div>`\n\n  return {\n    restrict: 'E',\n    template: template,\n    transclude: true,\n    scope: {\n      search: '&',\n      saveQuery: '&'\n    },\n    link: ($scope, $element, $attrs, $ctrl, $transclude) => {\n      const outerScope = $scope.$parent.$parent\n      const FIELD_ERR = `É necessário atribuir um valor ao atributo FIELD da tag ADVANCED-SEARCH-FIELD.`,\n        TYPE_ERR = `O tipo \"{1}\" passado como parâmetro para o ADVANCED-SEARCH-FIELD não é suportado.`,\n        NOTYPE_ERR = `É necessário atribuir um valor ao atributo TYPE da tag ADVANCED-SEARCH-FIELD.`,\n        SEARCH_ERR = `É necessário atribuir uma função para o atributo SEARCH. [search=\"foo()\"]`\n\n      var zIndexInitial = 999\n\n      $scope._attributes = []\n      $scope.controlMap = {}\n      $scope.addCondition = addCondition\n      $scope.addQuery = addQuery\n      $scope.clearQuery = clearQuery\n      $scope.closeInput = closeInput\n      $scope.removeQuery = removeQuery\n      $scope.showInput = showInput\n      $scope.saveSearch = saveSearch\n      $scope.updateOperator = updateOperator\n      $scope.toggleEnum = toggleEnum\n      $scope.saveQuery = $attrs.saveQuery ? $scope.saveQuery : false\n\n      if (!$attrs.search) console.error(SEARCH_ERR)\n\n      $scope.$on('filter-items', (err, data) => {\n        let value = JSON.parse(data.value)\n        $scope.controlMap = {}\n        JSON.parse(value.source).forEach((val, index) => {\n          if (index % 2 == 0) {\n            $scope.controlMap[index] = QueryModelFactory.create(val, true, 'EVERYTHING_NEEDED', zIndexInitial--)\n          } else {\n            $scope.controlMap[index] = QueryModelFactory.create({ value: val.value, label: val.value === 'AND' ? 'E' : 'OU' }, undefined, 'EVERYTHING_NEEDED', zIndexInitial--)\n          }\n        })\n        $scope.filterSelectItem = data;\n        $timeout(() => $scope.search({ param: HQLFactory.createHql($scope.controlMap) }));\n      })\n\n      $scope.$on('openOrCloseFilter', (event, openOrClose) => {\n        if (!openOrClose) {\n          delete $scope.filterSelectItem;\n          Object.keys($scope.controlMap)\n            .forEach(key => {\n              const scope = getIndexScope(key)\n              scope.$value.active = false\n              delete $scope.controlMap[key]\n              $timeout(_ => scope.$destroy())\n            })\n\n          $scope.search({ param: {} });\n          return\n        }\n\n        if (!$scope.controlMap['0']) initialize()\n\n      })\n\n      $transclude((transcludeElement) => {\n        let parentContext = $scope.$parent.$parent;\n\n        [].slice.call(transcludeElement).forEach((value, $index) => {\n          if (value.nodeName !== 'ADVANCED-SEARCH-FIELD') return\n          if (!value.getAttribute('field')) return console.error(FIELD_ERR)\n\n          let field = value.getAttribute('field'),\n            type = value.getAttribute('type'),\n            label = value.getAttribute('label') ? $interpolate(value.getAttribute('label'))(parentContext) : field.charAt(0).toUpperCase().concat(field.slice(1)),\n            extraProperties = {}\n\n          if (!type) return console.error(NOTYPE_ERR)\n\n          type = type.toLowerCase().trim() || ''\n          label = label || field.charAt(0).toUpperCase() + field.slice(1)\n          extraProperties = getExtraProperties(value)\n\n          if (!HQLFactory.useType(type)) return console.error(TYPE_ERR.replace('{1}', type))\n\n          $scope._attributes.push({ field, type, label, extraProperties })\n        })\n      })\n\n      if (!$scope._attributes[0]) return;\n      const getElm = string => angular.element(document.getElementById(string))\n      const initialize = _ => {\n        $scope.controlMap['0'] = QueryModelFactory.create({ attribute: {}, condition: {}, value: '' }, true, 'NOTHING', zIndexInitial--)\n\n        $timeout(_ => {\n          var indexScope = getIndexScope();\n          indexScope.$value.removeState('NOTHING').addState('UPDATING_ATTRIBUTE');\n        })\n      }\n\n      initialize()\n\n      let defaultAttribute = angular.copy($scope._attributes[0]),\n        defaultCondition = angular.copy(HQLFactory.useType(defaultAttribute.type).defaultCondition)[0]\n\n\n      $scope.addAttribute = addAttribute\n      $scope.toggleUpdatingAttribute = toggleUpdatingAttribute\n\n      $scope.addCondition = addCondition\n      $scope.toggleUpdatingCondition = toggleUpdatingCondition\n\n      $scope.toggleUpdatingValue = toggleUpdatingValue\n\n      $scope.goSearch = goSearch\n\n      $scope.callSearch = callSearch\n\n      $scope.deleteFilter = deleteFilter\n\n      $scope.isAnyQueryNotOk = isAnyQueryNotOk\n\n      $scope.lastOfControlMap = lastOfControlMap\n\n      $scope.getIndexScope = getIndexScope\n\n      $scope.validatonValue = validatonValue\n\n      function addAttribute(selectedAttribute, scope, key) {\n        scope.$value.query.attribute = selectedAttribute\n        scope.conditions = HQLFactory.useType(selectedAttribute.type).conditions\n        scope.validator = HQLFactory.useType(selectedAttribute.type).validator\n\n        scope.$value.removeState('UPDATING_ATTRIBUTE').removeState('NOTHING').addState('ONLY_ATTRIBUTE')\n\n        $timeout(() => {\n          scope.$value.addState('UPDATING_CONDITION')\n          if (scope.$value.isEVERYTHING_NEEDED()) {\n            scope.$value.removeState('EVERYTHING_NEEDED')\n            scope.$value.query.value = ''\n          }\n        })\n      }\n\n      function goSearch(event) {\n        if (event.keyCode == 13) {\n          callSearch(event);\n        }\n      }\n\n      function deleteFilter(filterId) {\n        console.log(filterId);\n        //TODO fazer o deletar filtro\n      }\n\n      function toggleUpdatingAttribute(scope) {\n        scope.$value.isUPDATING_ATTRIBUTE() ? scope.$value.removeState('UPDATING_ATTRIBUTE') : scope.$value.addState('UPDATING_ATTRIBUTE')\n      }\n\n      function addCondition(selectedCondition, scope, key) {\n        scope.$value.query.condition = selectedCondition\n        scope.$value.removeState('UPDATING_CONDITION').removeState('ONLY_ATTRIBUTE')\n        $timeout(() => {\n          if (!scope.$value.isEVERYTHING_NEEDED()) {\n            scope.$value.removeState('ATTRIBUTE_AND_CONDITION').addState('UPDATING_VALUE')\n            compileContent(key, scope)\n          } else {\n            $scope.search({ param: HQLFactory.createHql($scope.controlMap) });\n          }\n        })\n      }\n\n      function compileContent(key, scope) {\n        let elm = getElm(`_panelValue${key}`)\n        elm.addClass('show')\n        if (scope.$value.query.attribute.type == 'enum') {\n          elm.attr('style', 'width: 500px')\n        } else if (scope.$value.query.attribute.type !== 'enum' && elm.attr('style')) {\n          elm.removeAttr('style')\n        }\n        $compile(elm.html(HQLFactory.useType(scope.$value.query.attribute.type).template).contents())(scope)\n      }\n\n      function toggleUpdatingCondition(scope) {\n        scope.$value.isUPDATING_CONDITION() ?\n          scope.$value.removeState('UPDATING_CONDITION')\n          : scope.$value.addState('UPDATING_CONDITION')\n      }\n\n      function toggleUpdatingValue(scope, key) {\n        scope.$value.isUPDATING_VALUE() ?\n          (scope.$value.removeState('UPDATING_VALUE'), getElm(`_panelValue${key}`).addClass('show'))\n          : (scope.$value.addState('UPDATING_VALUE'), getElm(`_panelValue${key}`).addClass('show'))\n      }\n\n      function isAnyQueryNotOk() {\n        return Object.keys($scope.controlMap).filter((intern) => {\n          return !$scope.controlMap[intern].isEVERYTHING_NEEDED()\n            || $scope.controlMap[intern].isUPDATING_ATTRIBUTE()\n            || $scope.controlMap[intern].isUPDATING_CONDITION()\n            || $scope.controlMap[intern].isUPDATING_VALUE()\n        }).filter(value => (parseInt(value) % 2 == 0)).length === 0\n      }\n\n      function lastOfControlMap() {\n        return Object.keys($scope.controlMap)[Object.keys($scope.controlMap).length - 1]\n      }\n\n      function getIndexScope(index = 0) {\n        let desiredScope = angular.element(document.getElementById('first')).scope()\n        while (desiredScope.$index != index) {\n          if (desiredScope.$$nextSibling == null) break;\n          desiredScope = desiredScope.$$nextSibling\n        }\n        return desiredScope\n      }\n\n      function validatonValue($value) {\n        return $value.isNOTHING()\n          || $value.isUPDATING_ATTRIBUTE()\n          || $value.isUPDATING_VALUE()\n          || $value.isUPDATING_CONDITION()\n          || !($value.isEVERYTHING_NEEDED() || !$value.isATTRIBUTE_AND_CONDITION())\n          || (!isAnyQueryNotOk() && $value.isEVERYTHING_NEEDED())\n      }\n\n\n      function toggleEnum(event, key, field) {\n        event.stopPropagation()\n        let elm = getElm(`_panelValue${key}`).scope();\n        if (!Array.isArray(elm.$value.query.value)) elm.$value.query.value = [];\n        var index = elm.$value.query.value.indexOf(field)\n        if (index > -1) {\n          elm.$value.query.value.splice(index, 1)\n        } else {\n          elm.$value.query.value.push(field)\n        }\n      }\n\n      function getExtraProperties(value) {\n        let properties;\n        switch (value.getAttribute('type')) {\n          case 'boolean': {\n            properties = { trueLabel: value.getAttribute('true-label'), falseLabel: value.getAttribute('false-label') }\n            break;\n          }\n          case 'select': {\n            properties = { data: outerScope[value.getAttribute('data')] }\n            break;\n          }\n          case 'enum': {\n            properties = { data: outerScope[value.getAttribute('data')] }\n          }\n        }\n        return properties;\n      }\n\n\n      function addValue(index, value) {\n        getElm(`_value${index}`).html(value);\n      }\n\n      function addQuery() {\n        delete $scope.filterSelectItem;\n        $scope.controlMap[parseInt(lastOfControlMap()) + 1] = QueryModelFactory.create({ value: 'AND', label: 'E' }, undefined, 'EVERYTHING_NEEDED', zIndexInitial--)\n        $scope.controlMap[parseInt(lastOfControlMap()) + 1] = QueryModelFactory.create({ attribute: {}, condition: {}, value: '' }, undefined, 'NOTHING', zIndexInitial--)\n        $timeout(() => getIndexScope(parseInt(lastOfControlMap())).$value.addState('UPDATING_ATTRIBUTE'));\n      }\n\n      function clearQuery() {\n        $scope.controlMap = []\n        initialize()\n      }\n\n      function closeInput() {\n        $timeout(() => {\n          $scope.saveFilterOpen = false\n        }, 200)\n      }\n\n      function showInput() {\n        $scope.saveFilterOpen = true\n        $timeout(() => document.getElementById('_save').focus())\n      }\n\n      function saveSearch(name, event) {\n        if (!event || event.keyCode == 13) {\n          $scope.$parent.proxySave(HQLFactory.createHql($scope.controlMap), $scope.nameSearch)\n          $scope.saveFilterOpen = !$scope.saveFilterOpen;\n          $scope.nameSearch = '';\n        }\n      }\n\n      function removeQuery(scope, e, index) {\n        delete $scope.filterSelectItem;\n        if (!scope.$$prevSibling.$key && !scope.$$nextSibling) {\n          scope.$value.query = { attribute: {}, condition: {}, value: '' }\n          scope.$value.activeStates = 0;\n          $timeout(() => scope.$value.addState('UPDATING_ATTRIBUTE'))\n          callSearch(e, 'remove', index);\n          return\n        }\n        if (!scope.$$prevSibling.$key && scope.$$nextSibling) {\n          scope.$value.active = false\n          scope.$$nextSibling.$value.active = false\n          $timeout(() => (scope.$$nextSibling.$destroy(), scope.$destroy()))\n          callSearch(e, 'remove', index);\n          return\n        }\n        if (scope.$$prevSibling.$key) {\n          scope.$value.active = false\n          scope.$$prevSibling.$value.active = false\n          $timeout(() => (scope.$$prevSibling.$destroy(), scope.$destroy()))\n          callSearch(e, 'remove', index);\n        }\n      }\n\n\n      function updateOperator(scope) {\n        if (scope.$value.query.value === 'AND') {\n          scope.$value.query.value = 'OR'\n          scope.$value.query.label = 'OU'\n          $scope.search({ param: HQLFactory.createHql($scope.controlMap) });\n          return\n        }\n        scope.$value.query.value = 'AND'\n        scope.$value.query.label = 'E'\n        $scope.search({ param: HQLFactory.createHql($scope.controlMap) });\n      }\n\n      document.addEventListener('click', (e) => {\n        callSearch(e);\n      });\n\n      document.addEventListener('keyup', (e) => {\n        if (e.keyCode === 27) {\n          Object.keys($scope.controlMap)\n            .forEach(key => {\n              const scope = getIndexScope(key)\n              if (scope.$value.activeStates !== 8) {\n                if (scope.$$prevSibling.$key) {\n                  scope.$$prevSibling.$value.active = false\n                  delete $scope.controlMap[scope.$$prevSibling.$key]\n                  $timeout(() => (scope.$$prevSibling.$destroy()))\n                } else if (scope.$$nextSibling.$key) {\n                  scope.$$nextSibling.$value.active = false\n                  delete $scope.controlMap[scope.$$nextSibling.$key]\n                  $timeout(() => (scope.$$nextSibling.$destroy()))\n                } else if (scope.$$prevSibling.$key && scope.$$nextSibling.$key) {\n                  scope.$$nextSibling.$value.active = false\n                  delete $scope.controlMap[scope.$$nextSibling.$key]\n                  $timeout(() => (scope.$$nextSibling.$destroy()))\n                }\n                scope.$value.active = false\n                delete $scope.controlMap[key]\n                $timeout(_ => scope.$destroy())\n              }\n            })\n        }\n      })\n\n      function callSearch(e, typeSearch, positionCondition = -1) {\n        let outerClick = true\n        let updatingValue = Object.keys($scope.controlMap).filter((intern) => $scope.controlMap[intern].isUPDATING_VALUE())[0],\n          validator;\n\n        const isPanelAParent = (element, id) => {\n          for (var desired = angular.element(element); desired.parent().length != 0; desired = desired.parent()) if (desired[0].id == `_panelValue${id}`) {\n            desired = true\n            break;\n          }\n          return desired === true ? desired : false\n        }\n\n        if (e.target.id == `_conditionLabel${updatingValue}` || e.target.id == `_valueLabel${updatingValue}`) {\n          return\n        }\n\n        if (e.target.id == `_panelValue${updatingValue}` || isPanelAParent(e.target, updatingValue)) {\n          outerClick = false\n        }\n\n        if ($scope.controlMap[updatingValue]) {\n          validator = HQLFactory.validator($scope.controlMap[updatingValue].query.attribute.type)\n        }\n        if (outerClick && validator && validator($scope.controlMap[updatingValue].query.value) || e.type == 'keyup' || typeSearch == \"btn\") {\n          let scopeBeingUpdated = getElm(`_panelValue${updatingValue}`).scope()\n          $timeout(() => scopeBeingUpdated.$value.removeState('UPDATING_VALUE').removeState('ATTRIBUTE_AND_CONDITION').addState('EVERYTHING_NEEDED'))\n          getElm(`_panelValue${updatingValue}`).removeClass('show')\n          $scope.search({ param: HQLFactory.createHql($scope.controlMap) });\n        }\n        if (typeSearch == \"remove\") {\n          let param = positionCondition == 0 ? {} : HQLFactory.createHql($scope.controlMap);\n          $scope.search({ param: param });\n        }\n      }\n\n    }\n  }\n}\nangular.module('gumga.queryfilter.filter.core', [])\n  .directive('gumgaFilterCore', Filter)\n\n",
    "\n  'use strict'\n  Filter.$inject = ['HQLFactory','$compile','$timeout']\n  function Filter(HQLFactory,$compile, $timeout) {\n    let template = `\n    <div>\n      <button class=\"btn btn-default\" ng-click=\"isOpen = !isOpen \">\n        <span class=\"glyphicon glyphicon-filter\"></span>\n      </button>\n    </div>\n    <div id=\"replace\"></div>\n    `\n\n    return {\n      restrict: 'E',\n      template: template,\n      transclude: true,\n      scope: {\n        search: '&',\n        saveQuery: '&',\n        containerId: '@?'\n      },\n      link: ($scope, $element, $attrs, $ctrl, $transclude) => {\n        console.log('TESTE')\n        $scope.possibleAdvancedFields = []\n\n        $scope.search       = $scope.search      || angular.noop\n        $scope.saveQuery    = $scope.saveQuery   || angular.noop\n        $scope.containerId  = $scope.containerId || \"replace\";\n\n        $scope.proxySave    = (query) => {\n          $scope.saveQuery({ query, name })\n        }\n        $scope.proxySearch  = (param)  =>{\n           $scope.search({ param })\n        }\n\n        $transclude((transcludeElement) => {\n          [].slice.call(transcludeElement).forEach(value => {\n            if(value && value.nodeName === 'ADVANCED-SEARCH-FIELD')\n              $scope.possibleAdvancedFields.push(value.outerHTML)\n          })\n\n          let template  = `<gumga-filter-core ng-show=\"isOpen\" search=\"proxySearch(param)\" ${$attrs.saveQuery ? 'save-query=\"saveQuery(query, name)\"' : ''}>\n                            ${$scope.possibleAdvancedFields.reduce(((prev, next) => prev += next), '')}\n                          </gumga-filter-core>`,\n              element   = angular.element(document.getElementById($scope.containerId))          \n\n          element.replaceWith($compile(template)($scope))\n        })\n      }\n    }\n  }\n  angular.module('gumga.queryfilter.filter.directive', [])\n  .directive('gumgaFilter', Filter)\n",
    "'use strict';\n\nrequire('./filter.js')\nrequire('./filter-core.js')\n\nangular\n  .module('gumga.queryfilter.filter'\n  ,['gumga.queryfilter.filter.directive','gumga.queryfilter.filter.core']);",
    "\n  'use strict';\n\n  require('./factory/index.js')\n  require('./query/query.js')\n  require('./filter/index.js')\n  \n  angular.module('gumga.queryfilter', ['gumga.queryfilter.query','gumga.queryfilter.filter','gumga.queryfilter.factory']);\n\n",
    "// (function(){\n  //Description\n  Search.$inject = ['$q','$timeout','$compile','$interpolate' ]\n\n  function Search($q, $timeout, $compile, $interpolate){\n\n    let template = `\n     <div class=\"input-group\">\n         <input type=\"text\" placeholder=\"Busque seus filtros salvos\" class=\"form-control\" ng-model=\"ctrl.searchField\" ng-keyup=\"ctrl.doSearch(ctrl.searchField, $event, 'TYPEAHEAD')\" uib-typeahead=\"item.description for item in ctrl.proxyFn($viewValue)\" typeahead-on-select=\"ctrl.filterSelect($item, $model, $label, $event)\" ng-show=\"ctrl.hasQuerySaved && openFilter\"/>\n        <input type=\"text\" class=\"form-control\" ng-model=\"ctrl.searchField\" ng-keyup=\"ctrl.doSearch(ctrl.searchField, $event)\" ng-show=\"!ctrl.hasQuerySaved || !openFilter\" />\n        <span class=\"input-group-btn\" uib-dropdown uib-keyboard-nav auto-close=\"outsideClick\">\n          <button class=\"btn btn-default\" type=\"button\" uib-dropdown-toggle>\n            <span class=\"glyphicon glyphicon-chevron-down\"><span>\n          </button>\n          <ul uib-dropdown-menu role=\"menu\" aria-labelledby=\"single-button\" class=\"dropdown-menu-search\">\n            <li role=\"menuitem\" ng-repeat=\"(key, $value) in ctrl.mapFields\">\n              <a class=\"no-padding-search-fields\">\n                <label ng-click=\"ctrl.checkFields($event, $value.field)\">\n                  <input type=\"checkbox\" ng-model=\"$value.checkbox\" />\n                  {{::$value.label}}\n                </label>\n              </a>\n            </li>\n          </ul>\n          <button class=\"btn btn-default\" ng-click=\"openFilter = !openFilter\">\n            <span class=\"glyphicon glyphicon-filter\"></span>\n          </button>\n          <button class=\"btn btn-primary\" type=\"button\" ng-click=\"ctrl.doSearch(ctrl.searchField)\">\n            <span> {{::ctrl.searchText}} </span>\n            <span class=\"glyphicon glyphicon-search rotate-search-glyph\"></span>\n          </button>\n        </span>\n      </div>\n      <div class=\"row replace-filter\">\n        <div class=\"col-md-12\">\n          <div id=\"replaceFilter\"></div>\n        </div>\n      </div>`\n\n    controller.$inject = ['$scope', '$element', '$attrs', '$transclude']\n\n    function controller($scope, $element, $attrs, $transclude){\n      let ctrl = this\n\n      const hasAttr             = string  => (!!$attrs[string]),\n            FIELD_ERR           = 'É necessário um parâmetro field na tag search-field.[<search-field field=\"foo\"></search-field>]',\n            SEARCH_ERR          = 'É necessário passar uma função para o atributo \"search\". [search=\"foo(field, param)\"]'\n\n      ctrl.mapFields              = {}\n      ctrl.possibleAdvancedFields = []\n\n      if(!hasAttr('search')) console.error(SEARCH_ERR)\n\n      $transclude((transcludeElement) => {\n        let alreadySelected = false,\n            parentContext   = $scope.$parent;\n\n        [].slice.call(transcludeElement).forEach(value => {\n\n          if(value && value.nodeName === 'ADVANCED-SEARCH-FIELD') ctrl.possibleAdvancedFields.push(value.outerHTML)\n          if(!value || value.nodeName !== 'SEARCH-FIELD') return\n\n          let element   = angular.element(value),\n              field     = element.attr('field') ? element.attr('field') : '',\n              checkbox  = !!$scope.$eval(element.attr('select')),\n              label     = element.attr('label') ? $interpolate(element.attr('label'))(parentContext) : field.charAt(0).toUpperCase().concat(field.slice(1));\n\n          if(!field)      console.error(FIELD_ERR)\n          if(checkbox)    alreadySelected = true\n          ctrl.mapFields[field] = { checkbox, label, field }\n        })\n\n        if(!alreadySelected){\n          for(var first in ctrl.mapFields) break\n          if(first) ctrl.mapFields[first].checkbox = true\n        }\n      })\n\n      ctrl.compileFilter      = compileFilter\n      ctrl.doSearch           = doSearch\n      ctrl.proxyFn            = proxyFn\n      ctrl.filterSelect       = filterSelect\n      ctrl.advancedSearch     = hasAttr('advancedSearch') ? ctrl.advancedSearch   : null\n      ctrl.containerAdvanced  = hasAttr('containerAdvanced') ? ctrl.containerAdvanced : \"replaceFilter\"\n      ctrl.savedFilters       = hasAttr('savedFilters')   ? ctrl.savedFilters     : angular.noop\n      ctrl.searchText         = hasAttr('searchText')     ? $attrs['searchText']  : ' '\n      ctrl.proxySearch        = (param) => ctrl.advancedSearch({ param })\n      ctrl.hasQuerySaved      = !!$attrs.savedFilters\n      $scope.proxySave        = (query, name) => ctrl.saveQuery({ query, name })\n\n      if(ctrl.advancedSearch) ctrl.compileFilter()\n\n      function compileFilter(){\n        let template  = `<gumga-filter-core ng-show=\"openFilter\" is-open=\"true\" search=\"ctrl.proxySearch(param)\" ${$attrs.saveQuery ? 'save-query=\"saveQuery(query, name)\"' : ''}is-query=\"true\">${ctrl.possibleAdvancedFields.reduce(((prev, next) => prev += next), '')}</gumga-filter-core>`,\n\n        element   = angular.element(document.getElementById(ctrl.containerAdvanced))          \n        element.replaceWith($compile(template)($scope))\n      }\n\n      function doSearch(param, event = { keyCode: 13 }, inputType){\n        if(event.keyCode !== 13 || inputType == 'TYPEAHEAD') return;\n        let field = Object\n                    .keys(ctrl.mapFields)\n                    .filter(value => !!ctrl.mapFields[value].checkbox)\n                    .reduce((prev, next) => (prev += next.concat(',')), '')\n                    .slice(0, -1)\n\n        if(field.length === 0) return\n        ctrl.search({ field, param })\n      }\n\n      $scope.$watch('openFilter', (open) => {\n        if(typeof open !== 'undefined') $scope.$broadcast('openOrCloseFilter', open);\n      })\n\n      ctrl.checkFields = (event, field) => {\n        let someChecked = Object.keys(ctrl.mapFields).filter(value => !!ctrl.mapFields[value].checkbox)\n        if (someChecked.length == 1 && someChecked[0] == field) {\n          event.preventDefault()\n        }\n        event.stopPropagation()\n      }\n\n      function proxyFn($value){\n        return $q.when(ctrl.savedFilters({ page: location.hash }))\n      }\n\n      function filterSelect($item, $model, $label, $event){\n        \n        $timeout(() => (ctrl.searchField=  '', $scope.$broadcast('filter-items', $item)))\n      }\n    }\n\n    return {\n      restrict: 'E',\n      scope: {\n        search: '&',\n        advancedSearch: '&?',\n        containerAdvanced: '@?',\n        savedFilters: '&?',\n        saveQuery:'&?'\n      },\n      bindToController: true,\n      transclude: true,\n      controllerAs: 'ctrl',\n      controller,\n      template\n    }\n  }\n\n  angular.module('gumga.queryfilter.query', [])\n    .directive('gumgaQuery', Search)\n\n// })()\n"
  ]
}