{
  "version": 3,
  "sources": [
    "../node_modules/browser-pack/_prelude.js",
    "../src/factory/hql-factory.js",
    "../src/factory/index.js",
    "../src/factory/query-model-factory.js",
    "../src/filter/filter-core.js",
    "../src/filter/filter.js",
    "../src/filter/index.js",
    "../src/index.js",
    "../src/query/query.js"
  ],
  "names": [
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "require",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    "1",
    "module",
    "HQLFactory",
    "$filter",
    "useType",
    "type",
    "SUPPORTED_TYPES",
    "hqlObjectCreator",
    "hqls",
    "arguments",
    "hqlObjects",
    "contains",
    "hql",
    "label",
    "before",
    "after",
    "not_contains",
    "starts_with",
    "ends_with",
    "eq",
    "ne",
    "ge",
    "gt",
    "le",
    "lt",
    "in",
    "is",
    "date_eq",
    "date_ne",
    "map",
    "value",
    "createHql",
    "mapObj",
    "aqo",
    "aq",
    "Object",
    "keys",
    "filter",
    "active",
    "query",
    "val",
    "attribute",
    "concat",
    "field",
    "condition",
    "replace",
    "date",
    "split",
    "valueBefore",
    "valueAfter",
    "join",
    "push",
    "item",
    "idx",
    "ary",
    "operators",
    "indexOf",
    "previousValue",
    "nextValue",
    "slice",
    "pop",
    "source",
    "JSON",
    "stringify",
    "validator",
    "angular",
    "noop",
    "CPF_REGEX",
    "CNPJ_REGEX",
    "DATE_REGEX",
    "URL_REGEX",
    "IP_REGEX",
    "NUMBER_REGEX",
    "FLOAT_REGEX",
    "string",
    "String",
    "defaultCondition",
    "conditions",
    "template",
    "number",
    "str",
    "test",
    "float",
    "money",
    "cpf",
    "utils",
    "toCpf",
    "cnpj",
    "boolean",
    "select",
    "enum",
    "enumList",
    "Array",
    "isArray",
    "email",
    "emailAddress",
    "url",
    "ip",
    "input",
    "$inject",
    "factory",
    "QueryModelFactory",
    "QueryModel",
    "initialState",
    "zIndex",
    "this",
    "STATES",
    "freeze",
    "NOTHING",
    "ONLY_ATTRIBUTE",
    "ATTRIBUTE_AND_CONDITION",
    "EVERYTHING_NEEDED",
    "UPDATING_ATTRIBUTE",
    "UPDATING_CONDITION",
    "UPDATING_VALUE",
    "activeStates",
    "prototype",
    "addState",
    "newState",
    "removeState",
    "stateToRemove",
    "isNOTHING",
    "isONLY_ATTRIBUTE",
    "isATTRIBUTE_AND_CONDITION",
    "isEVERYTHING_NEEDED",
    "isUPDATING_ATTRIBUTE",
    "isUPDATING_CONDITION",
    "isUPDATING_VALUE",
    "isBeingUpdated",
    "create",
    "_len",
    "param",
    "_key",
    "Function",
    "bind",
    "apply",
    "Filter",
    "$compile",
    "$timeout",
    "$interpolate",
    "restrict",
    "transclude",
    "scope",
    "search",
    "saveQuery",
    "link",
    "$scope",
    "$element",
    "$attrs",
    "$ctrl",
    "$transclude",
    "addAttribute",
    "selectedAttribute",
    "key",
    "$value",
    "goSearch",
    "event",
    "keyCode",
    "callSearch",
    "deleteFilter",
    "filterId",
    "console",
    "log",
    "toggleUpdatingAttribute",
    "addCondition",
    "selectedCondition",
    "controlMap",
    "compileContent",
    "elm",
    "getElm",
    "addClass",
    "attr",
    "removeAttr",
    "html",
    "contents",
    "toggleUpdatingCondition",
    "toggleUpdatingValue",
    "isAnyQueryNotOk",
    "intern",
    "parseInt",
    "lastOfControlMap",
    "getIndexScope",
    "index",
    "desiredScope",
    "element",
    "document",
    "getElementById",
    "$index",
    "$$nextSibling",
    "validatonValue",
    "toggleEnum",
    "stopPropagation",
    "splice",
    "getExtraProperties",
    "properties",
    "getAttribute",
    "trueLabel",
    "falseLabel",
    "data",
    "outerScope",
    "addQuery",
    "filterSelectItem",
    "zIndexInitial",
    "clearQuery",
    "initialize",
    "closeInput",
    "saveFilterOpen",
    "showInput",
    "focus",
    "saveSearch",
    "name",
    "$parent",
    "proxySave",
    "nameSearch",
    "removeQuery",
    "$$prevSibling",
    "$key",
    "$destroy",
    "updateOperator",
    "typeSearch",
    "positionCondition",
    "outerClick",
    "updatingValue",
    "target",
    "id",
    "isPanelAParent",
    "desired",
    "parent",
    "scopeBeingUpdated",
    "removeClass",
    "_attributes",
    "error",
    "$on",
    "err",
    "parse",
    "forEach",
    "openOrClose",
    "_",
    "transcludeElement",
    "parentContext",
    "nodeName",
    "charAt",
    "toUpperCase",
    "extraProperties",
    "toLowerCase",
    "trim",
    "defaultAttribute",
    "copy",
    "addEventListener",
    "directive",
    "containerId",
    "possibleAdvancedFields",
    "proxySearch",
    "outerHTML",
    "reduce",
    "prev",
    "next",
    "replaceWith",
    "Search",
    "$q",
    "controller",
    "compileFilter",
    "ctrl",
    "containerAdvanced",
    "doSearch",
    "inputType",
    "mapFields",
    "checkbox",
    "proxyFn",
    "when",
    "savedFilters",
    "page",
    "location",
    "hash",
    "filterSelect",
    "$item",
    "$model",
    "$label",
    "$event",
    "searchField",
    "$broadcast",
    "hasAttr",
    "alreadySelected",
    "$eval",
    "first",
    "advancedSearch",
    "searchText",
    "hasQuerySaved",
    "$watch",
    "open",
    "checkFields",
    "someChecked",
    "preventDefault",
    "bindToController",
    "controllerAs"
  ],
  "mappings": "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",
  "file": "gumga-query-filter.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict';\n\nHQLFactory.$inject = ['$filter'];\n\nfunction HQLFactory($filter){\n  /*\n    Regex de URL foi retirada do código-fonte do AngularJS, utilizado por eles para validar input[type=\"url\"].\n    LINK: https://github.com/angular/angular.js/blob/master/src/ng/directive/input.js#L26\n   */\n  const CPF_REGEX       = /[0-9]{3}\\.[0-9]{3}\\.[0-9]{3}\\-[0-9]{2}/,\n        CNPJ_REGEX      = /[0-9]{2}\\.?[0-9]{3}\\.?[0-9]{3}\\/?[0-9]{4}\\-?[0-9]{2}/,\n        DATE_REGEX      = /[0-9]{2}\\/[0-9]{2}\\/[0-9]{4}/,\n        URL_REGEX       = /^[a-z][a-z\\d.+-]*:\\/*(?:[^:@]+(?::[^@]+)?@)?(?:[^\\s:/?#]+|\\[[a-f\\d:]+\\])(?::\\d+)?(?:\\/[^?#]*)?(?:\\?[^#]*)?(?:#.*)?$/i,\n        IP_REGEX        = /(?:[0-9]{1,3}\\.){3}[0-9]{1,3}/,\n        NUMBER_REGEX    = /^[0-9]+$/,\n        FLOAT_REGEX     = /^[0-9]+(\\.[0-9]{1,2})?$/\n\n  let SUPPORTED_TYPES = {}\n\n  SUPPORTED_TYPES['string'] = {\n    validator: (string) => (typeof string === 'string' || string instanceof String),\n    defaultCondition: hqlObjectCreator(['contains']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'contains', 'not_contains', 'starts_with', 'ends_with']),\n    template: `<div class=\"input-group\">\n                  <input type=\"text\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" class=\"form-control\" required autofocus style=\" width: 150px;height: 40px;\" />\n                  <div class=\"input-group-addon\">\n                      <i ng-show=\"validator($value.query.value) && $value.query.value.length > 0\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                      <i ng-show=\"!validator($value.query.value) || !$value.query.value\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                  </div>\n                  <div class=\"input-group-addon\">\n                      <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                  </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['number'] = {\n    validator: (str) => (NUMBER_REGEX.test(str)),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'gt', 'ge', 'lt', 'le']),\n    template: `<div class=\"input-group\">\n                    <input type=\"text\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" class=\"form-control\" gumga-number required style=\" width: 150px;height: 40px;\" />\n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value)\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value)\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\"  class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['float'] = {\n    validator: (number) => (FLOAT_REGEX.test(number)),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'gt', 'ge', 'lt', 'le']),\n    template: `<div class=\"input-group\">\n                    <input type=\"text\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" class=\"form-control\" gumga-number required style=\" width: 150px;height: 40px;\"/>                    \n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value)\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value)\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['money'] = {\n    validator: (number) => (FLOAT_REGEX.test(number)),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'gt', 'ge', 'lt', 'le']),\n    template: `<div class=\"input-group\">\n                    <input ng-keyup=\"goSearch($event)\" type=\"text\" ng-model=\"$value.query.value\" gumga-mask=\"R$ \" class=\"form-control\" gumga-number required style=\" width: 150px;height: 40px;\" />\n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value)\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value)\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['cpf'] = {\n    validator: (cpf) => (CPF_REGEX.test(utils.toCpf(cpf))),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'contains', 'not_contains', 'starts_with', 'ends_with']),\n    template: `<div class=\"input-group\">\n                    <input type=\"text\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" gumga-mask=\"999.999.999.99\" class=\"form-control\" required style=\" width: 150px;height: 40px;\" />\n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value) && $value.query.value.length > 0\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value) || !$value.query.value\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['cnpj'] = {\n    validator: (cnpj) => (CNPJ_REGEX.test(cnpj)),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'contains', 'not_contains', 'starts_with', 'ends_with']),\n    template: `<div class=\"input-group\">\n                    <input type=\"text\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" gumga-mask=\"99.999.999/9999-99\" class=\"form-control\" required style=\" width: 150px;height: 40px;\" />\n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value) && $value.query.value.length > 0\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value) || !$value.query.value\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['boolean'] = {\n    validator: (boolean) => (boolean == 'true' || boolean == 'false'),\n    defaultCondition: hqlObjectCreator(['is']),\n    conditions: hqlObjectCreator(['is']),\n    template: ` <div class=\"radio\"><label><input  type=\"radio\" ng-model=\"$value.query.value\" value=\"true\"> {{$value.query.attribute.extraProperties.trueLabel}}</label></div><div class=\"radio\"><label><input type=\"radio\" ng-model=\"$value.query.value\" value=\"false\"> {{$value.query.attribute.extraProperties.falseLabel}} </label></div>`\n  }\n\n  SUPPORTED_TYPES['date'] = {\n    validator: (date) => (DATE_REGEX.test($filter('date')(date, 'dd/MM/yyyy'))),\n    defaultCondition: hqlObjectCreator(['date_eq']),\n    conditions: hqlObjectCreator(['date_eq', 'date_ne', 'gt', 'ge', 'lt', 'le']),\n    template: `<div class=\"input-group\">\n                    <input type=\"text\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" gumga-mask=\"99/99/9999\" class=\"form-control\" required  style=\" width: 150px;height: 40px;\"/>\n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value) && $value.query.value.length > 0\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value) || !$value.query.value\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['select'] = {\n    validator: (value) => (!!value),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne']),\n    template: `<select ng-model=\"$value.query.value\" ng-options=\"d.field as d.label for d in $value.query.attribute.extraProperties.data track by d.field\" class=\"form-control\" required /></select>`\n  }\n\n  SUPPORTED_TYPES['enum'] = {\n    validator: (enumList) => (Array.isArray(enumList)),\n    defaultCondition: hqlObjectCreator(['in']),\n    conditions: hqlObjectCreator(['in']),\n    template: `<div class=\"col-md-4\" ng-class=\"{'row': $index % 3 == 0}\" ng-repeat=\"d in $value.query.attribute.extraProperties.data\"><label><input type=\"checkbox\" ng-checked=\"$value.query.value.indexOf(d.field) > -1\" ng-click=\"toggleEnum($event, $key, d.field)\"></label> {{d.label}}</div>`\n  }\n\n  SUPPORTED_TYPES['email'] = {\n    validator: (emailAddress) => (typeof emailAddress === 'string' || emailAddress instanceof String),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'contains', 'not_contains', 'starts_with', 'ends_with']),\n    template: `<div class=\"input-group\">\n                    <input type=\"text\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" class=\"form-control\" required  style=\" width: 150px;height: 40px;\" />\n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value) && $value.query.value.length > 0\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value) || !$value.query.value\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['url'] = {\n    validator: (url) => (URL_REGEX.test(url)),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'contains', 'not_contains', 'starts_with', 'ends_with']),\n    template: `<div class=\"input-group\">\n                    <input type=\"url\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" class=\"form-control\" required  style=\" width: 150px;height: 40px;\" />\n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value) && $value.query.value.length > 0\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value) || !$value.query.value\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  SUPPORTED_TYPES['ip'] = {\n    validator: (ip) => (IP_REGEX.test(ip)),\n    defaultCondition: hqlObjectCreator(['eq']),\n    conditions: hqlObjectCreator(['eq', 'ne', 'contains', 'not_contains', 'starts_with', 'ends_with']),\n    template: `<div class=\"input-group\">\n                    <input type=\"text\" ng-keyup=\"goSearch($event)\" ng-model=\"$value.query.value\" class=\"form-control\" required style=\" width: 150px;height: 40px;\" />\n                    <div class=\"input-group-addon\">\n                        <i ng-show=\"validator($value.query.value) && $value.query.value.length > 0\" class=\"glyphicon glyphicon-ok\" style=\"color:green\"></i></span>\n                        <i ng-show=\"!validator($value.query.value) || !$value.query.value\" class=\"glyphicon glyphicon-remove\" style=\"color:red\"></i>\n                    </div>\n                    <div class=\"input-group-addon\">\n                        <button ng-click=\"callSearch($event, 'btn')\" class=\"btn btn-default\">Buscar</button>\n                    </div>\n              </div>`\n  }\n\n  function useType(type) {\n    return SUPPORTED_TYPES[type] || null;\n  }\n\n  function hqlObjectCreator(hqls = [], hqlObjects = {}){\n    hqlObjects['contains']      = { hql: ` contains `     , label:  ` contém `        , before: ` like '%`     , after:  `%'` }\n    hqlObjects['not_contains']  = { hql: ` not_contains ` , label:  ` não contém `    , before: ` not like '%` , after:  `%'` }\n    hqlObjects['starts_with']   = { hql: ` starts_with `  , label:  ` começa com `    , before: ` like '`      , after:  `%'` }\n    hqlObjects['ends_with']     = { hql: ` ends_with `    , label:  ` termina com `   , before: ` like '%`     , after:  `'` }\n    hqlObjects['eq']            = { hql: ` eq `           , label:  ` igual `         , before: ` = '`         , after:  `'` }\n    hqlObjects['ne']            = { hql: ` ne `           , label:  ` diferente de `  , before: ` != '`        , after:  `'` }\n    hqlObjects['ge']            = { hql: ` ge `           , label:  ` maior igual `   , before: ` >= '`        , after:  `'` }\n    hqlObjects['gt']            = { hql: ` gt `           , label:  ` maior que `     , before: ` >   `        , after:  `` }\n    hqlObjects['le']            = { hql: ` le `           , label:  ` menor igual `   , before: ` <=  `        , after:  `` }\n    hqlObjects['lt']            = { hql: ` lt `           , label:  ` menor que `     , before: ` < '`         , after:  `'` }\n    hqlObjects['in']            = { hql: ` in `           , label:  ` em`             , before: ` in (`        , after:  `)` }\n    hqlObjects['is']            = { hql: ` is `           , label:  ` está `          , before: ` is `         , after:  `` }\n    hqlObjects['date_eq']       = { hql: ` eq `           , label:  ` igual `         , before: ` >= `         , after:  `` }\n    hqlObjects['date_ne']       = { hql: ` ne `           , label:  ` diferente de `  , before: ` <= `         , after:  `` }\n    // hqlObjects['date_eq']       = { hql: ` date_eq`       , label:  ` no dia `        , before: ` `}\n    return hqls.map(value => hqlObjects[value])\n  }\n\n  function createHql(mapObj = {}){\n    let aqo = []\n    let aq =\n      Object\n        .keys(mapObj)\n        .filter(value => mapObj[value].active && mapObj[value].query.value)\n        .map(val => {\n          let attribute = 'obj.'.concat(mapObj[val].query.attribute ? mapObj[val].query.attribute.field : '*'),\n              before    = mapObj[val].query.condition ? mapObj[val].query.condition.before : '*',\n              value     = mapObj[val].query.value.replace ? mapObj[val].query.value.replace(/'/g,\"''\") : mapObj[val].query.value,\n              after     = mapObj[val].query.condition ? mapObj[val].query.condition.after : '*';\n\n            if (mapObj[val].query.attribute) {\n              switch (mapObj[val].query.attribute.type) {\n                case 'date':\n                  let date = value.split('')\n                  value = `${date[4]}${date[5]}${date[6]}${date[7]}-${date[2]}${date[3]}-${date[0]}${date[1]}`\n\n                  // if (mapObj[val].query.condition.hql == ' eq ' || mapObj[val].query.condition.hql == ' ne ') {\n                    let valueBefore = `'${value} 00:00:00'`,\n                        valueAfter  = `'${value} 23:59:59'`\n\n                    switch (mapObj[val].query.condition.hql) {\n                      case ' eq ':\n                        value = `${valueBefore} AND ${attribute} <= ${valueAfter}`\n                        break;\n                      case ' ne ':\n                        value = `${valueBefore} OR ${attribute} >= ${valueAfter}`\n                        break;\n                      case ' le ':\n                        value = valueAfter;\n                        break;\n                      case ' gt ':\n                        value = valueAfter;\n                        break;\n                    }\n                  // }\n                  // value = $filter('date')(new Date($filter('gumgaGenericFilter')(value, 'date')),'yyyy-MM-dd')\n                  // value = $filter('gumgaGenericFilter')(value, 'date')\n\n                  value = value\n                  break;\n                case 'enum':\n                  value = `'${mapObj[val].query.value.join(\"','\")}'`;\n                  break;\n                case 'number':\n                case 'float':\n                case 'money':\n                  before    = before.replace(/'/g, '');\n                  after     = after.replace(/'/g, '');\n                  break;  \n              }\n            }\n\n            aqo.push({\n              attribute:  mapObj[val].query.attribute,\n              condition:  mapObj[val].query.condition,\n              value:      mapObj[val].query.value.replace ? mapObj[val].query.value.replace(/'/g,\"''\") : mapObj[val].query.value\n            })\n\n\n        return (attribute.concat(before).concat(value).concat(after)).replace(/obj.\\*/g,'').replace(/\\*/g,'')\n      })\n      .filter((item, idx, ary) => {\n        var operators = [\"OR\", \"AND\"];\n\n        if (operators.indexOf(item) === -1)\n          return true;\n\n        var previousValue = ary[idx - 1];        \n        var nextValue = ary[idx + 1];        \n        if ((previousValue !== undefined && operators.indexOf(previousValue) === -1)\n          && (nextValue !== undefined && operators.indexOf(nextValue) === -1))\n          return true;\n\n        return false;\n      })      \n      .join(' ')\n\n    if(aq.slice(-2) === 'ND' || aq.slice(-2) === 'OR'){\n      aqo.pop()\n      return { hql: aq.slice(0, -3), source: JSON.stringify(aqo)  }\n    }\n    \n    if (aq) {\n      return { hql: aq, source: JSON.stringify(aqo) }\n    }    \n\n    return {}\n  }\n\n\n  let utils = {\n    toCpf(input){\n      let str = input+ '';\n      return str.replace(/\\D/g,'').replace(/(\\d{3})(\\d)/,\"$1.$2\").replace(/(\\d{3})(\\d)/,\"$1.$2\").replace(/(\\d{3})(\\d{1,2})$/,\"$1-$2\");\n    }\n  }\n\n  function validator(type = ' '){\n    return SUPPORTED_TYPES[type] ? SUPPORTED_TYPES[type].validator : angular.noop\n  }\n\n  return { useType , hqlObjectCreator, createHql, validator };\n\n}\n\nangular.module('gumga.queryfilter.factory.hql', [])\n  .factory('HQLFactory', HQLFactory);\n",
    "'use strict';\n\nrequire('./hql-factory.js')\nrequire('./query-model-factory.js')\n\nangular\n  .module('gumga.queryfilter.factory'\n  ,['gumga.queryfilter.factory.hql','gumga.queryfilter.factory.querymodel']);",
    "'use strict';\n\nQueryModelFactory.$inject = [];\n\nfunction QueryModelFactory(){\n\n  function QueryModel(query = {}, active = true, initialState = 'NOTHING', zIndex = 999) {\n    this.STATES = Object.freeze({\n      NOTHING:                  1,  // 0000001\n      ONLY_ATTRIBUTE:           2,  // 0000010\n      ATTRIBUTE_AND_CONDITION:  4,  // 0000100\n      EVERYTHING_NEEDED:        8,  // 0001000\n      UPDATING_ATTRIBUTE:       16, // 0010000\n      UPDATING_CONDITION:       32, // 0100000\n      UPDATING_VALUE:           64  // 1000000\n    })\n    this.query                      = query\n    this.active                     = active\n    this.activeStates               = this.STATES[initialState]\n    this.zIndex                     = zIndex\n  };\n\n  // Functions\n\n  QueryModel.prototype.addState = function (newState){\n    this.activeStates |= this.STATES[newState]\n    return this\n  }\n  QueryModel.prototype.removeState = function (stateToRemove){\n    this.activeStates &= ~this.STATES[stateToRemove]\n    return this\n  }\n\n  // Checking Functions\n\n  QueryModel.prototype.isNOTHING  =function(){\n     return (this.activeStates & this.STATES['NOTHING']) != 0\n   }\n  QueryModel.prototype.isONLY_ATTRIBUTE = function(){\n     return (this.activeStates & this.STATES['ONLY_ATTRIBUTE']) != 0\n   }\n  QueryModel.prototype.isATTRIBUTE_AND_CONDITION = function(){\n     return (this.activeStates & this.STATES['ATTRIBUTE_AND_CONDITION']) != 0\n   }\n  QueryModel.prototype.isEVERYTHING_NEEDED = function(){\n     return (this.activeStates & this.STATES['EVERYTHING_NEEDED']) != 0\n   }\n  QueryModel.prototype.isUPDATING_ATTRIBUTE = function(){\n     return (this.activeStates & this.STATES['UPDATING_ATTRIBUTE']) != 0\n   }\n  QueryModel.prototype.isUPDATING_CONDITION = function(){\n     return (this.activeStates & this.STATES['UPDATING_CONDITION']) != 0\n   }\n  QueryModel.prototype.isUPDATING_VALUE = function(){\n     return (this.activeStates & this.STATES['UPDATING_VALUE']) != 0\n   }\n\n   QueryModel.prototype.isBeingUpdated = function(){\n     return this.isUPDATING_VALUE()\n   }\n\n  return {\n    create(...param) {\n      return new QueryModel(...param);\n    }\n  }\n}\n\nangular.module('gumga.queryfilter.factory.querymodel', [])\n  .factory('QueryModelFactory', QueryModelFactory);\n",
    "\n'use strict'\n\nFilter.$inject = ['HQLFactory', '$compile', '$timeout', '$interpolate', 'QueryModelFactory']\nfunction Filter(HQLFactory, $compile, $timeout, $interpolate, QueryModelFactory) {\n  let template = `\n        <style>\n          .gumga-filter .dropdown-menu > li > a {\n            cursor: pointer;\n          }\n          .gumga-filter .panel-body .input-group-btn {\n            border: 1px solid #ccc;\n            border-left-width: 2px;\n            border-right-width: 2px;\n            border-radius: 4px;\n          }\n          .gumga-filter .panel-body .input-group-btn .btn {\n            border-color: transparent;\n            border-radius: 4px;\n            border: 1px;\n          }\n          .gumga-filter .panel-body .btn,\n          .gumga-filter .panel-body .input-group-btn .btn {\n            padding: 3px 6px;\n          }\n          .gumga-filter-panel {\n            position: absolute;\n            top: 100%;\n            left: 0;\n            z-index: 1000;\n            display: none;\n            float: left;\n            min-width: 160px;\n            padding: 12px;\n            margin: 2px 0 0;\n            font-size: 14px;\n            text-align: left;\n            background-color: #fff;\n            border: 1px solid #ccc;\n            border: 1px solid rgba(0,0,0,.15);\n            border-radius: 4px;\n            box-shadow: 0 6px 12px rgba(0,0,0,.175);\n            background-clip: padding-box;\n          }\n          .gumga-filter-panel .dropdown-menu li {\n            z-index: 3000;\n            position: absolute;\n            top: 100%;\n            left: 0;\n            z-index: 1000;\n            display: none;\n            float: left;\n            min-width: 160px;\n            padding: 12px;\n            margin: 2px 0 0;\n            font-size: 14px;\n            text-align: left;\n            background-color: #fff;\n            border: 1px solid #ccc;\n            border: 1px solid rgba(0,0,0,.15);\n            border-radius: 4px;\n            box-shadow: 0 6px 12px rgba(0,0,0,.175);\n            background:-clip padding-box;\n          }\n          gumga-filter .panel.heading {\n            padding: 5px 10px;\n          }\n          gumga-filter .form-inline.panel-body .input-group {\n            margin-right: 5px;\n          }\n          gumga-filter .form-inline.panel-body .input-group-btn > button,\n          gumga-filter .form-inline.panel-body .input-group-btn > btn-group > button[uib-dropdown-toggle] {\n            z-index: 0;\n          }\n          gumga-filter .form-inline.panel-body .input-group-btn > btn-group > ul[uib-dropdown-menu],\n          gumga-filter .form-inline.panel-body .input-group-btn > btn-group > ul[uib-dropdown-menu] > li {\n            z-index: 3000;\n          }\n          gumga-filter .btn-group.dropdown .glyphicon {\n            top: 3px;\n          }\n          gumga-query .row.replace-filter {\n            margin-top: .5%;\n          }\n        </style>\n        <div class=\"gumga-filter panel panel-default\" >\n            <header class=\"panel-heading\" style=\"padding: 5px 10px;\">\n                <div class=\"row\">\n                    <div class=\"col-md-8 col-xs-7\">\n                        <h5>Pesquisa avançada <strong ng-if=\"filterSelectItem\"> - {{filterSelectItem.description}}</strong></h5>\n                    </div>\n                    <div class=\"col-md-4 col-xs-5\" ng-show=\"saveQuery\">\n                        <div class=\"input-group\" >\n                            <input type=\"text\" ng-model=\"nameSearch\" class=\"form-control\" id=\"_save\" ng-show=\"saveFilterOpen\" ng-keyup=\"saveSearch(nameSearch, $event)\" ng-blur=\"closeInput()\">\n                            <div class=\"input-group-btn\">\n                                <button class=\"btn btn-success\" ng-show=\"saveFilterOpen\" ng-click=\"saveSearch(nameSearcht)\" ng-disabled=\"!nameSearch\">\n                                    <i class=\"glyphicon glyphicon-floppy-saved\"></i>\n                                </button>\n                                <button class=\"btn btn-default pull-right\" type=\"button\" ng-hide=\"saveFilterOpen\" ng-click=\"showInput()\" ng-disabled=\"!isAnyQueryNotOk()\">\n                                    <i class=\"glyphicon glyphicon-floppy-disk\"></i>\n                                </button>\n                                <button class=\"btn btn-default\"  ng-click=\"deleteFilter(filterSelectItem.id)\" ng-if=\"filterSelectItem\" style=\"float: right;margin-right: 15px;\">\n                                    <i class=\"glyphicon glyphicon-floppy-remove\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </header>\n            <div class=\"form-inline panel-body\">\n              <div class=\"row\">\n                <div class=\"col-md-6\">\n                  <h5><strong>Filtrar por:</strong></h5>\n                </div>\n                <div class=\"col-md-6\">\n                  <button id=\"single-button\" type=\"button\" class=\"btn btn-default pull-right\" ng-click=\"clearQuery()\" ng-disabled=\"!isAnyQueryNotOk()\" >\n                    <i class=\"glyphicon glyphicon-repeat\"></i> Limpar filtros\n                  </button>\n                </div>\n              </div>\n              <div class=\"input-group\" ng-repeat=\"($key, $value) in controlMap\" style=\"margin-right: 1%;margin-top: 7.5px;z-index: {{$value.zIndex}}\" ng-show=\"$value.active\" id=\"first\" >\n                  <div class=\"input-group-btn\">\n                    <div class=\"btn-group\" uib-dropdown ng-show=\"!$value.query.label\" is-open=\"$value.isUPDATING_ATTRIBUTE()\" auto-close=\"disabled\">\n                      <button type=\"button\" style=\"z-index: 0\" class=\"btn btn-default\" uib-dropdown-toggle ng-click=\"toggleUpdatingAttribute(this)\" ng-disabled=\"$value.isUPDATING_VALUE() || $value.isUPDATING_CONDITION() || (!isAnyQueryNotOk() && $value.isEVERYTHING_NEEDED()) \">\n                        <span> {{ $value.query.attribute.label || 'Atributo' }}  <i class=\"glyphicon glyphicon-chevron-down\"></i></span>\n                      </button>\n                      <ul uib-dropdown-menu style=\"z-index: 3000\" role=\"menu\">\n                        <li style=\"z-index: 3000;\" role=\"menuitem\" ng-repeat=\"attribute in _attributes track by $index\">\n                          <a ng-click=\"addAttribute(attribute, this.$parent, $key)\">{{attribute.label}}</a>\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"btn-group\" uib-dropdown is-open=\"$value.isUPDATING_CONDITION()\" ng-show=\"!$value.query.label\" auto-close=\"disabled\">\n                      <button type=\"button\" class=\"btn btn-default\" uib-dropdown-toggle ng-click=\"toggleUpdatingCondition(this)\" ng-disabled=\"$value.isUPDATING_VALUE() || $value.isUPDATING_ATTRIBUTE() || (!isAnyQueryNotOk() && $value.isEVERYTHING_NEEDED()) || $value.isNOTHING()\">\n                          <span>{{ $value.query.condition.label || 'Condição' }} <i class=\"glyphicon glyphicon-chevron-down\"></i></span>\n                      </button>\n                      <ul uib-dropdown-menu role=\"menu\" >\n                        <li role=\"menuitem\" ng-repeat=\"condition in conditions track by $index\">\n                          <a ng-click=\"addCondition(condition, this.$parent, $key)\">{{condition.label}}</a>\n                        </li>\n                      </ul>\n                    </div>\n                    <div class=\"btn-group\" id=\"_btnValue{{$key}}\" ng-show=\"!$value.query.label\">\n                      <button type=\"button\" class=\"btn btn-default\" ng-click=\"toggleUpdatingValue(this, $key)\" ng-disabled=\"validatonValue($value)\" id=\"_valueLabel{{$key}}\">\n                          <span id=\"_conditionLabel{{$key}}\">{{ $value.query.value ? $value.query.value.push && $value.query.value.length > 0  ?  $value.query.value.join(', ') : $value.query.value : 'valor' | gumgaGenericFilter:$value.query.attribute.type}} </span>\n                      </button>\n                      <div class=\"gumga-filter-panel\" id=\"_panelValue{{$key}}\"></div>\n                    </div>\n                    <div class=\"btn-group\" ng-show=\"$value.query.label\">\n                      <button type=\"button\" class=\"btn btn-default\" ng-click=\"updateOperator(this)\" ng-disabled=\"!isAnyQueryNotOk()\">\n                        <span> {{$value.query.label}} </span>\n                      </button>\n                    </div>\n                    <button type=\"button\" style=\"z-index: 0;border-left: 1px solid #ccc; \" class=\"btn btn-default\" ng-click=\"removeQuery(this, $event, $index)\" ng-show=\"!$value.query.label\" ng-disabled=\"!$value.isEVERYTHING_NEEDED() || $value.isUPDATING_VALUE() ||(!isAnyQueryNotOk() && $value.isEVERYTHING_NEEDED()) \">\n                      <span class=\"glyphicon glyphicon-remove\"></span>\n                    </button>\n                    </div>\n                  </div>\n                  <button id=\"single-button\" type=\"button\" class=\"btn btn-default\" ng-click=\"addQuery()\" ng-disabled=\"!isAnyQueryNotOk()\" style=\"margin-top: 7.5px;\" >\n                    <span class=\"glyphicon glyphicon-plus\"></span>\n                  </button>\n                </div>\n              </div>\n            </div>\n        </div>`\n\n  return {\n    restrict: 'E',\n    template: template,\n    transclude: true,\n    scope: {\n      search: '&',\n      saveQuery: '&'\n    },\n    link: ($scope, $element, $attrs, $ctrl, $transclude) => {\n      const outerScope = $scope.$parent.$parent\n      const FIELD_ERR = `É necessário atribuir um valor ao atributo FIELD da tag ADVANCED-SEARCH-FIELD.`,\n        TYPE_ERR = `O tipo \"{1}\" passado como parâmetro para o ADVANCED-SEARCH-FIELD não é suportado.`,\n        NOTYPE_ERR = `É necessário atribuir um valor ao atributo TYPE da tag ADVANCED-SEARCH-FIELD.`,\n        SEARCH_ERR = `É necessário atribuir uma função para o atributo SEARCH. [search=\"foo()\"]`\n\n      var zIndexInitial = 999\n\n      $scope._attributes = []\n      $scope.controlMap = {}\n      $scope.addCondition = addCondition\n      $scope.addQuery = addQuery\n      $scope.clearQuery = clearQuery\n      $scope.closeInput = closeInput\n      $scope.removeQuery = removeQuery\n      $scope.showInput = showInput\n      $scope.saveSearch = saveSearch\n      $scope.updateOperator = updateOperator\n      $scope.toggleEnum = toggleEnum\n      $scope.saveQuery = $attrs.saveQuery ? $scope.saveQuery : false\n\n      if (!$attrs.search) console.error(SEARCH_ERR)\n\n      $scope.$on('filter-items', (err, data) => {\n        let value = JSON.parse(data.value)\n        $scope.controlMap = {}\n        JSON.parse(value.source).forEach((val, index) => {\n          if (index % 2 == 0) {\n            $scope.controlMap[index] = QueryModelFactory.create(val, true, 'EVERYTHING_NEEDED', zIndexInitial--)\n          } else {\n            $scope.controlMap[index] = QueryModelFactory.create({ value: val.value, label: val.value === 'AND' ? 'E' : 'OU' }, undefined, 'EVERYTHING_NEEDED', zIndexInitial--)\n          }\n        })\n        $scope.filterSelectItem = data;\n        $timeout(() => $scope.search({ param: HQLFactory.createHql($scope.controlMap) }));\n      })\n\n      $scope.$on('openOrCloseFilter', (event, openOrClose) => {\n        if (!openOrClose) {\n          delete $scope.filterSelectItem;\n          Object.keys($scope.controlMap)\n            .forEach(key => {\n              const scope = getIndexScope(key)\n              scope.$value.active = false\n              delete $scope.controlMap[key]\n              $timeout(_ => scope.$destroy())\n            })\n\n          $scope.search({ param: {} });\n          return\n        }\n\n        if (!$scope.controlMap['0']) initialize()\n\n      })\n\n      $transclude((transcludeElement) => {\n        let parentContext = $scope.$parent.$parent;\n\n        [].slice.call(transcludeElement).forEach((value, $index) => {\n          if (value.nodeName !== 'ADVANCED-SEARCH-FIELD') return\n          if (!value.getAttribute('field')) return console.error(FIELD_ERR)\n\n          let field = value.getAttribute('field'),\n            type = value.getAttribute('type'),\n            label = value.getAttribute('label') ? $interpolate(value.getAttribute('label'))(parentContext) : field.charAt(0).toUpperCase().concat(field.slice(1)),\n            extraProperties = {}\n\n          if (!type) return console.error(NOTYPE_ERR)\n\n          type = type.toLowerCase().trim() || ''\n          label = label || field.charAt(0).toUpperCase() + field.slice(1)\n          extraProperties = getExtraProperties(value)\n\n          if (!HQLFactory.useType(type)) return console.error(TYPE_ERR.replace('{1}', type))\n\n          $scope._attributes.push({ field, type, label, extraProperties })\n        })\n      })\n\n      if (!$scope._attributes[0]) return;\n      const getElm = string => angular.element(document.getElementById(string))\n      const initialize = _ => {\n        $scope.controlMap['0'] = QueryModelFactory.create({ attribute: {}, condition: {}, value: '' }, true, 'NOTHING', zIndexInitial--)\n\n        $timeout(_ => {\n          var indexScope = getIndexScope();\n          indexScope.$value.removeState('NOTHING').addState('UPDATING_ATTRIBUTE');\n        })\n      }\n\n      initialize()\n\n      let defaultAttribute = angular.copy($scope._attributes[0]),\n        defaultCondition = angular.copy(HQLFactory.useType(defaultAttribute.type).defaultCondition)[0]\n\n\n      $scope.addAttribute = addAttribute\n      $scope.toggleUpdatingAttribute = toggleUpdatingAttribute\n\n      $scope.addCondition = addCondition\n      $scope.toggleUpdatingCondition = toggleUpdatingCondition\n\n      $scope.toggleUpdatingValue = toggleUpdatingValue\n\n      $scope.goSearch = goSearch\n\n      $scope.callSearch = callSearch\n\n      $scope.deleteFilter = deleteFilter\n\n      $scope.isAnyQueryNotOk = isAnyQueryNotOk\n\n      $scope.lastOfControlMap = lastOfControlMap\n\n      $scope.getIndexScope = getIndexScope\n\n      $scope.validatonValue = validatonValue\n\n      function addAttribute(selectedAttribute, scope, key) {\n        scope.$value.query.attribute = selectedAttribute\n        scope.conditions = HQLFactory.useType(selectedAttribute.type).conditions\n        scope.validator = HQLFactory.useType(selectedAttribute.type).validator\n\n        scope.$value.removeState('UPDATING_ATTRIBUTE').removeState('NOTHING').addState('ONLY_ATTRIBUTE')\n\n        $timeout(() => {\n          scope.$value.addState('UPDATING_CONDITION')\n          if (scope.$value.isEVERYTHING_NEEDED()) {\n            scope.$value.removeState('EVERYTHING_NEEDED')\n            scope.$value.query.value = ''\n          }\n        })\n      }\n\n      function goSearch(event) {\n        if (event.keyCode == 13) {\n          callSearch(event);\n        }\n      }\n\n      function deleteFilter(filterId) {\n        console.log(filterId);\n        //TODO fazer o deletar filtro\n      }\n\n      function toggleUpdatingAttribute(scope) {\n        scope.$value.isUPDATING_ATTRIBUTE() ? scope.$value.removeState('UPDATING_ATTRIBUTE') : scope.$value.addState('UPDATING_ATTRIBUTE')\n      }\n\n      function addCondition(selectedCondition, scope, key) {\n        scope.$value.query.condition = selectedCondition\n        scope.$value.removeState('UPDATING_CONDITION').removeState('ONLY_ATTRIBUTE')\n        $timeout(() => {\n          if (!scope.$value.isEVERYTHING_NEEDED()) {\n            scope.$value.removeState('ATTRIBUTE_AND_CONDITION').addState('UPDATING_VALUE')\n            compileContent(key, scope)\n          } else {\n            $scope.search({ param: HQLFactory.createHql($scope.controlMap) });\n          }\n        })\n      }\n\n      function compileContent(key, scope) {\n        let elm = getElm(`_panelValue${key}`)\n        elm.addClass('show')\n        if (scope.$value.query.attribute.type == 'enum') {\n          elm.attr('style', 'width: 500px')\n        } else if (scope.$value.query.attribute.type !== 'enum' && elm.attr('style')) {\n          elm.removeAttr('style')\n        }\n        $compile(elm.html(HQLFactory.useType(scope.$value.query.attribute.type).template).contents())(scope)\n      }\n\n      function toggleUpdatingCondition(scope) {\n        scope.$value.isUPDATING_CONDITION() ?\n          scope.$value.removeState('UPDATING_CONDITION')\n          : scope.$value.addState('UPDATING_CONDITION')\n      }\n\n      function toggleUpdatingValue(scope, key) {\n        scope.$value.isUPDATING_VALUE() ?\n          (scope.$value.removeState('UPDATING_VALUE'), getElm(`_panelValue${key}`).addClass('show'))\n          : (scope.$value.addState('UPDATING_VALUE'), getElm(`_panelValue${key}`).addClass('show'))\n      }\n\n      function isAnyQueryNotOk() {\n        return Object.keys($scope.controlMap).filter((intern) => {\n          return !$scope.controlMap[intern].isEVERYTHING_NEEDED()\n            || $scope.controlMap[intern].isUPDATING_ATTRIBUTE()\n            || $scope.controlMap[intern].isUPDATING_CONDITION()\n            || $scope.controlMap[intern].isUPDATING_VALUE()\n        }).filter(value => (parseInt(value) % 2 == 0)).length === 0\n      }\n\n      function lastOfControlMap() {\n        return Object.keys($scope.controlMap)[Object.keys($scope.controlMap).length - 1]\n      }\n\n      function getIndexScope(index = 0) {\n        let desiredScope = angular.element(document.getElementById('first')).scope()\n        while (desiredScope.$index != index) {\n          if (desiredScope.$$nextSibling == null) break;\n          desiredScope = desiredScope.$$nextSibling\n        }\n        return desiredScope\n      }\n\n      function validatonValue($value) {\n        return $value.isNOTHING()\n          || $value.isUPDATING_ATTRIBUTE()\n          || $value.isUPDATING_VALUE()\n          || $value.isUPDATING_CONDITION()\n          || !($value.isEVERYTHING_NEEDED() || !$value.isATTRIBUTE_AND_CONDITION())\n          || (!isAnyQueryNotOk() && $value.isEVERYTHING_NEEDED())\n      }\n\n\n      function toggleEnum(event, key, field) {\n        event.stopPropagation()\n        let elm = getElm(`_panelValue${key}`).scope();\n        if (!Array.isArray(elm.$value.query.value)) elm.$value.query.value = [];\n        var index = elm.$value.query.value.indexOf(field)\n        if (index > -1) {\n          elm.$value.query.value.splice(index, 1)\n        } else {\n          elm.$value.query.value.push(field)\n        }\n      }\n\n      function getExtraProperties(value) {\n        let properties;\n        switch (value.getAttribute('type')) {\n          case 'boolean': {\n            properties = { trueLabel: value.getAttribute('true-label'), falseLabel: value.getAttribute('false-label') }\n            break;\n          }\n          case 'select': {\n            properties = { data: outerScope[value.getAttribute('data')] }\n            break;\n          }\n          case 'enum': {\n            properties = { data: outerScope[value.getAttribute('data')] }\n          }\n        }\n        return properties;\n      }\n\n\n      function addValue(index, value) {\n        getElm(`_value${index}`).html(value);\n      }\n\n      function addQuery() {\n        delete $scope.filterSelectItem;\n        $scope.controlMap[parseInt(lastOfControlMap()) + 1] = QueryModelFactory.create({ value: 'AND', label: 'E' }, undefined, 'EVERYTHING_NEEDED', zIndexInitial--)\n        $scope.controlMap[parseInt(lastOfControlMap()) + 1] = QueryModelFactory.create({ attribute: {}, condition: {}, value: '' }, undefined, 'NOTHING', zIndexInitial--)\n        $timeout(() => getIndexScope(parseInt(lastOfControlMap())).$value.addState('UPDATING_ATTRIBUTE'));\n      }\n\n      function clearQuery() {\n        $scope.controlMap = []\n        initialize()\n      }\n\n      function closeInput() {\n        $timeout(() => {\n          $scope.saveFilterOpen = false\n        }, 200)\n      }\n\n      function showInput() {\n        $scope.saveFilterOpen = true\n        $timeout(() => document.getElementById('_save').focus())\n      }\n\n      function saveSearch(name, event) {\n        if (!event || event.keyCode == 13) {\n          $scope.$parent.proxySave(HQLFactory.createHql($scope.controlMap), $scope.nameSearch)\n          $scope.saveFilterOpen = !$scope.saveFilterOpen;\n          $scope.nameSearch = '';\n        }\n      }\n\n      function removeQuery(scope, e, index) {\n        delete $scope.filterSelectItem;\n        if (!scope.$$prevSibling.$key && !scope.$$nextSibling) {\n          scope.$value.query = { attribute: {}, condition: {}, value: '' }\n          scope.$value.activeStates = 0;\n          $timeout(() => scope.$value.addState('UPDATING_ATTRIBUTE'))\n          callSearch(e, 'remove', index);\n          return\n        }\n        if (!scope.$$prevSibling.$key && scope.$$nextSibling) {\n          scope.$value.active = false\n          scope.$$nextSibling.$value.active = false\n          $timeout(() => (scope.$$nextSibling.$destroy(), scope.$destroy()))\n          callSearch(e, 'remove', index);\n          return\n        }\n        if (scope.$$prevSibling.$key) {\n          scope.$value.active = false\n          scope.$$prevSibling.$value.active = false\n          $timeout(() => (scope.$$prevSibling.$destroy(), scope.$destroy()))\n          callSearch(e, 'remove', index);\n        }\n      }\n\n\n      function updateOperator(scope) {\n        if (scope.$value.query.value === 'AND') {\n          scope.$value.query.value = 'OR'\n          scope.$value.query.label = 'OU'\n          $scope.search({ param: HQLFactory.createHql($scope.controlMap) });\n          return\n        }\n        scope.$value.query.value = 'AND'\n        scope.$value.query.label = 'E'\n        $scope.search({ param: HQLFactory.createHql($scope.controlMap) });\n      }\n\n      document.addEventListener('click', (e) => {\n        callSearch(e);\n      });\n\n      document.addEventListener('keyup', (e) => {\n        if (e.keyCode === 27) {\n          Object.keys($scope.controlMap)\n            .forEach(key => {\n              const scope = getIndexScope(key)\n              if (scope.$value.activeStates !== 8) {\n                if (scope.$$prevSibling.$key) {\n                  scope.$$prevSibling.$value.active = false\n                  delete $scope.controlMap[scope.$$prevSibling.$key]\n                  $timeout(() => (scope.$$prevSibling.$destroy()))\n                } else if (scope.$$nextSibling.$key) {\n                  scope.$$nextSibling.$value.active = false\n                  delete $scope.controlMap[scope.$$nextSibling.$key]\n                  $timeout(() => (scope.$$nextSibling.$destroy()))\n                } else if (scope.$$prevSibling.$key && scope.$$nextSibling.$key) {\n                  scope.$$nextSibling.$value.active = false\n                  delete $scope.controlMap[scope.$$nextSibling.$key]\n                  $timeout(() => (scope.$$nextSibling.$destroy()))\n                }\n                scope.$value.active = false\n                delete $scope.controlMap[key]\n                $timeout(_ => scope.$destroy())\n              }\n            })\n        }\n      })\n\n      function callSearch(e, typeSearch, positionCondition = -1) {\n        let outerClick = true\n        let updatingValue = Object.keys($scope.controlMap).filter((intern) => $scope.controlMap[intern].isUPDATING_VALUE())[0],\n          validator;\n\n        const isPanelAParent = (element, id) => {\n          for (var desired = angular.element(element); desired.parent().length != 0; desired = desired.parent()) if (desired[0].id == `_panelValue${id}`) {\n            desired = true\n            break;\n          }\n          return desired === true ? desired : false\n        }\n\n        if (e.target.id == `_conditionLabel${updatingValue}` || e.target.id == `_valueLabel${updatingValue}`) {\n          return\n        }\n\n        if (e.target.id == `_panelValue${updatingValue}` || isPanelAParent(e.target, updatingValue)) {\n          outerClick = false\n        }\n\n        if ($scope.controlMap[updatingValue]) {\n          validator = HQLFactory.validator($scope.controlMap[updatingValue].query.attribute.type)\n        }\n        if (outerClick && validator && validator($scope.controlMap[updatingValue].query.value) || e.type == 'keyup' || typeSearch == \"btn\") {\n          let scopeBeingUpdated = getElm(`_panelValue${updatingValue}`).scope()\n          $timeout(() => scopeBeingUpdated.$value.removeState('UPDATING_VALUE').removeState('ATTRIBUTE_AND_CONDITION').addState('EVERYTHING_NEEDED'))\n          getElm(`_panelValue${updatingValue}`).removeClass('show')\n          $scope.search({ param: HQLFactory.createHql($scope.controlMap) });\n        }\n        if (typeSearch == \"remove\") {\n          let param = positionCondition == 0 ? {} : HQLFactory.createHql($scope.controlMap);\n          $scope.search({ param: param });\n        }\n      }\n\n    }\n  }\n}\nangular.module('gumga.queryfilter.filter.core', [])\n  .directive('gumgaFilterCore', Filter)\n\n",
    "\n  'use strict'\n  Filter.$inject = ['HQLFactory','$compile','$timeout']\n  function Filter(HQLFactory,$compile, $timeout) {\n    let template = `\n    <div>\n      <button class=\"btn btn-default\" ng-click=\"isOpen = !isOpen \">\n        <span class=\"glyphicon glyphicon-filter\"></span>\n      </button>\n    </div>\n    <div id=\"replace\"></div>\n    `\n\n    return {\n      restrict: 'E',\n      template: template,\n      transclude: true,\n      scope: {\n        search: '&',\n        saveQuery: '&',\n        containerId: '@?'\n      },\n      link: ($scope, $element, $attrs, $ctrl, $transclude) => {\n        console.log('TESTE')\n        $scope.possibleAdvancedFields = []\n\n        $scope.search       = $scope.search      || angular.noop\n        $scope.saveQuery    = $scope.saveQuery   || angular.noop\n        $scope.containerId  = $scope.containerId || \"replace\";\n\n        $scope.proxySave    = (query) => {\n          $scope.saveQuery({ query, name })\n        }\n        $scope.proxySearch  = (param)  =>{\n           $scope.search({ param })\n        }\n\n        $transclude((transcludeElement) => {\n          [].slice.call(transcludeElement).forEach(value => {\n            if(value && value.nodeName === 'ADVANCED-SEARCH-FIELD')\n              $scope.possibleAdvancedFields.push(value.outerHTML)\n          })\n\n          let template  = `<gumga-filter-core ng-show=\"isOpen\" search=\"proxySearch(param)\" ${$attrs.saveQuery ? 'save-query=\"saveQuery(query, name)\"' : ''}>\n                            ${$scope.possibleAdvancedFields.reduce(((prev, next) => prev += next), '')}\n                          </gumga-filter-core>`,\n              element   = angular.element(document.getElementById($scope.containerId))          \n\n          element.replaceWith($compile(template)($scope))\n        })\n      }\n    }\n  }\n  angular.module('gumga.queryfilter.filter.directive', [])\n  .directive('gumgaFilter', Filter)\n",
    "'use strict';\n\nrequire('./filter.js')\nrequire('./filter-core.js')\n\nangular\n  .module('gumga.queryfilter.filter'\n  ,['gumga.queryfilter.filter.directive','gumga.queryfilter.filter.core']);",
    "\n  'use strict';\n\n  require('./factory/index.js')\n  require('./query/query.js')\n  require('./filter/index.js')\n  \n  angular.module('gumga.queryfilter', ['gumga.queryfilter.query','gumga.queryfilter.filter','gumga.queryfilter.factory']);\n\n",
    "// (function(){\n  //Description\n  Search.$inject = ['$q','$timeout','$compile','$interpolate' ]\n\n  function Search($q, $timeout, $compile, $interpolate){\n\n    let template = `\n     <div class=\"input-group\">\n         <input type=\"text\" placeholder=\"Busque seus filtros salvos\" class=\"form-control\" ng-model=\"ctrl.searchField\" ng-keyup=\"ctrl.doSearch(ctrl.searchField, $event, 'TYPEAHEAD')\" uib-typeahead=\"item.description for item in ctrl.proxyFn($viewValue)\" typeahead-on-select=\"ctrl.filterSelect($item, $model, $label, $event)\" ng-show=\"ctrl.hasQuerySaved && openFilter\"/>\n        <input type=\"text\" class=\"form-control\" ng-model=\"ctrl.searchField\" ng-keyup=\"ctrl.doSearch(ctrl.searchField, $event)\" ng-show=\"!ctrl.hasQuerySaved || !openFilter\" />\n        <span class=\"input-group-btn\" uib-dropdown uib-keyboard-nav auto-close=\"outsideClick\">\n          <button class=\"btn btn-default\" type=\"button\" uib-dropdown-toggle>\n            <span class=\"glyphicon glyphicon-chevron-down\"><span>\n          </button>\n          <ul uib-dropdown-menu role=\"menu\" aria-labelledby=\"single-button\" class=\"dropdown-menu-search\">\n            <li role=\"menuitem\" ng-repeat=\"(key, $value) in ctrl.mapFields\">\n              <a class=\"no-padding-search-fields\">\n                <label ng-click=\"ctrl.checkFields($event, $value.field)\">\n                  <input type=\"checkbox\" ng-model=\"$value.checkbox\" />\n                  {{::$value.label}}\n                </label>\n              </a>\n            </li>\n          </ul>\n          <button class=\"btn btn-default\" ng-click=\"openFilter = !openFilter\">\n            <span class=\"glyphicon glyphicon-filter\"></span>\n          </button>\n          <button class=\"btn btn-primary\" type=\"button\" ng-click=\"ctrl.doSearch(ctrl.searchField)\">\n            <span> {{::ctrl.searchText}} </span>\n            <span class=\"glyphicon glyphicon-search rotate-search-glyph\"></span>\n          </button>\n        </span>\n      </div>\n      <div class=\"row replace-filter\">\n        <div class=\"col-md-12\">\n          <div id=\"replaceFilter\"></div>\n        </div>\n      </div>`\n\n    controller.$inject = ['$scope', '$element', '$attrs', '$transclude']\n\n    function controller($scope, $element, $attrs, $transclude){\n      let ctrl = this\n\n      const hasAttr             = string  => (!!$attrs[string]),\n            FIELD_ERR           = 'É necessário um parâmetro field na tag search-field.[<search-field field=\"foo\"></search-field>]',\n            SEARCH_ERR          = 'É necessário passar uma função para o atributo \"search\". [search=\"foo(field, param)\"]'\n\n      ctrl.mapFields              = {}\n      ctrl.possibleAdvancedFields = []\n\n      if(!hasAttr('search')) console.error(SEARCH_ERR)\n\n      $transclude((transcludeElement) => {\n        let alreadySelected = false,\n            parentContext   = $scope.$parent;\n\n        [].slice.call(transcludeElement).forEach(value => {\n\n          if(value && value.nodeName === 'ADVANCED-SEARCH-FIELD') ctrl.possibleAdvancedFields.push(value.outerHTML)\n          if(!value || value.nodeName !== 'SEARCH-FIELD') return\n\n          let element   = angular.element(value),\n              field     = element.attr('field') ? element.attr('field') : '',\n              checkbox  = !!$scope.$eval(element.attr('select')),\n              label     = element.attr('label') ? $interpolate(element.attr('label'))(parentContext) : field.charAt(0).toUpperCase().concat(field.slice(1));\n\n          if(!field)      console.error(FIELD_ERR)\n          if(checkbox)    alreadySelected = true\n          ctrl.mapFields[field] = { checkbox, label, field }\n        })\n\n        if(!alreadySelected){\n          for(var first in ctrl.mapFields) break\n          if(first) ctrl.mapFields[first].checkbox = true\n        }\n      })\n\n      ctrl.compileFilter      = compileFilter\n      ctrl.doSearch           = doSearch\n      ctrl.proxyFn            = proxyFn\n      ctrl.filterSelect       = filterSelect\n      ctrl.advancedSearch     = hasAttr('advancedSearch') ? ctrl.advancedSearch   : null\n      ctrl.containerAdvanced  = hasAttr('containerAdvanced') ? ctrl.containerAdvanced : \"replaceFilter\"\n      ctrl.savedFilters       = hasAttr('savedFilters')   ? ctrl.savedFilters     : angular.noop\n      ctrl.searchText         = hasAttr('searchText')     ? $attrs['searchText']  : ' '\n      ctrl.proxySearch        = (param) => ctrl.advancedSearch({ param })\n      ctrl.hasQuerySaved      = !!$attrs.savedFilters\n      $scope.proxySave        = (query, name) => ctrl.saveQuery({ query, name })\n\n      if(ctrl.advancedSearch) ctrl.compileFilter()\n\n      function compileFilter(){\n        let template  = `<gumga-filter-core ng-show=\"openFilter\" is-open=\"true\" search=\"ctrl.proxySearch(param)\" ${$attrs.saveQuery ? 'save-query=\"saveQuery(query, name)\"' : ''}is-query=\"true\">${ctrl.possibleAdvancedFields.reduce(((prev, next) => prev += next), '')}</gumga-filter-core>`,\n\n        element   = angular.element(document.getElementById(ctrl.containerAdvanced))          \n        element.replaceWith($compile(template)($scope))\n      }\n\n      function doSearch(param, event = { keyCode: 13 }, inputType){\n        if(event.keyCode !== 13 || inputType == 'TYPEAHEAD') return;\n        let field = Object\n                    .keys(ctrl.mapFields)\n                    .filter(value => !!ctrl.mapFields[value].checkbox)\n                    .reduce((prev, next) => (prev += next.concat(',')), '')\n                    .slice(0, -1)\n\n        if(field.length === 0) return\n        ctrl.search({ field, param })\n      }\n\n      $scope.$watch('openFilter', (open) => {\n        if(typeof open !== 'undefined') $scope.$broadcast('openOrCloseFilter', open);\n      })\n\n      ctrl.checkFields = (event, field) => {\n        let someChecked = Object.keys(ctrl.mapFields).filter(value => !!ctrl.mapFields[value].checkbox)\n        if (someChecked.length == 1 && someChecked[0] == field) {\n          event.preventDefault()\n        }\n        event.stopPropagation()\n      }\n\n      function proxyFn($value){\n        return $q.when(ctrl.savedFilters({ page: location.hash }))\n      }\n\n      function filterSelect($item, $model, $label, $event){\n        \n        $timeout(() => (ctrl.searchField=  '', $scope.$broadcast('filter-items', $item)))\n      }\n    }\n\n    return {\n      restrict: 'E',\n      scope: {\n        search: '&',\n        advancedSearch: '&?',\n        containerAdvanced: '@?',\n        savedFilters: '&?',\n        saveQuery:'&?'\n      },\n      bindToController: true,\n      transclude: true,\n      controllerAs: 'ctrl',\n      controller,\n      template\n    }\n  }\n\n  angular.module('gumga.queryfilter.query', [])\n    .directive('gumgaQuery', Search)\n\n// })()\n"
  ]
}