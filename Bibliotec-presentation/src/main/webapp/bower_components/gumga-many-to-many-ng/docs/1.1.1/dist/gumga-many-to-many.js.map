{
  "version": 3,
  "sources": [
    "../node_modules/browser-pack/_prelude.js",
    "../src/many-to-many.js"
  ],
  "names": [],
  "mappings": "AAAA;cCAA,mBAME,YAAA,GAAA,SAAA,SAAA,mBAwDE,YAAA,OAAA,SAAA,OAAA,qBAkEE,oBACM,aAAc,iCAAA,OAAwC,KAAA,OAAxC,MAAA,OAAlB,2IACI,aAAe,iCAAA,OAAwC,KAAA,OAAxC,OAAA,OAAnB,oJACS,cACP,MAAA,KAAc,SAAA,kBAAd,cAAA,QAA+D,SAAA,MAAA,eAC7D,QAAA,OAAA,YAAmC,SAAA,aAAsB,QAAA,QAAA,OAAzD,eAEF,MAAA,KAAc,SAAA,kBAAd,eAAA,QAAgE,SAAA,IAAA,eAC9D,QAAA,KAAA,YAAiC,SAAA,cAAuB,QAAA,QAAA,KAAxD,sBAKN,qBAAA,iBACS,YAAA,QAAA,MAAA,IAAA,MAAA,KAAA,OAAsD,SAAA,WACpD,MAAP,MADK,OAAP,UAmGF,cAAA,WACS,KAAA,QAAA,8BAAP,gBAGF,YAAA,IAAA,KAAA,eACS,KAAA,QAAY,GAAA,QAAW,aAAX,MAAZ,KAAP,YAvLE,MAAJ,UACA,UACK,OAAL,eAA0B,KAAA,cAAA,QAC1B,YAAmB,OAAA,aAAnB,QACA,UAAiB,OAAA,WAAjB,aACA,gBAAuB,OAAA,iBAAvB,iBACA,iBAAwB,OAAA,kBAAxB,gBACA,gBAAuB,OAAA,iBAAvB,sBACA,iBAAwB,OAAA,kBAAxB,sBACA,cAAqB,OAAA,eAArB,kBACA,eAAsB,OAAA,gBAAtB,kBACA,oBAA2B,OAAA,qBAA3B,cACA,qBAA4B,OAAA,sBAA5B,cACA,gBAAuB,OAAA,iBAAvB,oBACA,YAAA,OACA,SAAgB,OAAA,UAAhB,2DACA,UAAiB,OAAA,WAAjB,2DACA,UAAiB,KAAA,mBACjB,SAAgB,QAAA,KAAa,KAA7B,gBACA,SAAgB,KAAA,kBAChB,iBAAwB,OAAA,kBAAxB,QACI,0BACW,OAAA,aAAsB,KAAtB,aAA0C,QADtC,kBAEF,OAAA,aAAsB,KAAtB,aAA0C,kBAAQ,iBACjD,OAAA,gBAAyB,KAAzB,gBAAgD,QAH/C,8BAIU,OAAA,2BAAoC,KAApC,2BAAsE,QAJhF,8BAKU,OAAA,2BAAoC,KAApC,2BAAsE,QALnG,WAQA,WAAkB,SAAA,QAChB,YAAkB,MAAlB,YAGF,OAAA,gBAA+B,SAAA,MAE7B,qBAAA,4BAGF,OAAA,iBAAgC,SAAA,WAC9B,SAAgB,QAAA,KAAa,KAA7B,WAED,kBAHD,QAKA,YAAmB,SAAA,OACb,KAAJ,mBAAA,KAA2B,SAAA,KAAgB,UAAA,OAAsB,SAAA,WAAO,KAAI,KAAJ,kBAAA,cAAA,QAAiD,MAAjD,gBAAP,UACjE,mBAED,sBAED,aAAoB,SAAA,SAAA,OAAA,aACd,WAAA,SAAY,OAAgB,SAAA,aACvB,cAAA,cAA4B,MAAnC,SAEE,UAAA,OAAkB,UAAtB,SAAwC,KAAA,YAAA,GACxC,QAAI,WAAoB,KAAA,SAAgB,OAAA,OAAhB,YACxB,SAAI,WAAqB,KAAA,UAAiB,OAAA,OAAjB,qBACzB,OAAA,EAAmB,SAAnB,aACA,SAAgB,QAAA,KAAa,KAA7B,WACA,SAAI,UAAqB,KAAA,WAAA,SACzB,mBAEA,uBAAA,YAAA,UACA,WAAA,SAsBF,UAAiB,SAAA,MAAA,WACf,gCACA,SAAA,iCAEK,GAAL,OAAA,KAAyB,IAAA,eAAA,MAAA,aAA2B,KAA3B,MAAiD,KAArD,WAAoE,OACnF,oBAAA,MAA6B,KAAjC,mBACE,UAAA,oCACA,UAAiB,qBAAA,IAAjB,0BACA,UAAiB,2CAAA,IAAjB,2CACA,UAAA,cAGJ,MAAA,UAAA,uCACA,UAAA,8FACA,UAAA,mBACA,UAAA,wBAEA,2BACI,UAAK,eACG,KADY,cAAA,iBAGV,SAAA,SAAA,oBAA0C,SAAA,OAAA,OAAA,0BACpD,OAAA,cACA,KAAc,6BACZ,2BAIM,QAAA,gBACN,SAKN,OAAA,KAAe,wBACb,mCAGJ,YAAmB,SAAA,WAAA,MAAA,MAAA,MAAA,OACb,aAAA,cAA4B,MAAhC,oBACE,OAAA,MAAA,SACA,KAAA,OAEA,qBAAA,wBACA,SAAgB,QAAA,KAAa,KAA7B,kBACA,YAAA,gBACA,YAA0B,MAA1B,gBAEA,OAAA,UAAA,OAAA,sBACW,iBACT,OAAA,UAAA,OAAA,YADF,UAGA,YAAA,SAIJ,OAAc,SAAA,cACZ,WAAA,QACA,YAAkB,MAAlB,aACA,WAAA,iBACA,oBAeI,kBAAmB,QAAnB,kBAAA,iBAA2B,UAAA,OAAsB,SAAA,mBAAe,SAAA,OAAA,YAAf,OAAtB,OAAR,QAGzB,iBAAwB,gBACtB,YAAA,KAAmB,SAAA,OAAqB,SAAA,YAAQ,iBAAR,oBAG1C,OAAoB,SAAA,iBAClB,QAAA,QAAyB,SAAA,OACnB,SAAU,QAAA,QAAA,IAAd,UACQ,QAAR,cACE,kBAAmB,OAAA,KAAmB,QAAnB,SAEnB,WAAA,mBAAoB,OAAA,MAAoB,QAApB,wBAcjB,cACH,aAAc,QAAA,QAAgB,SAAA,eAAlC,6BACA,YAAwB,SAAS,gDAAkD,WAAW,KAAX,SAAA,SAAlD,2BAAT,YAAwI,YAAhK,aACI,cAAe,QAAA,QAAgB,SAAA,eAAnC,+BACA,YAAyB,SAAS,8CAAgD,WAAW,KAAX,UAAA,SAAhD,wBAAT,YAAoI,aAA7J,oBA3CF,kBACM,cACC,MAAA,OAAD,MAAsB,KAAA,OAA1B,kBACE,KAAA,kEAEG,OAAL,YAAwB,WAAA,KAAA,gDACnB,OAAL,WAAuB,WAAA,KAAA,0DACvB,QAAmB,SAAA,aACjB,MAAA,UAwCJ,qBAAA,WAAA,sBAtMF,SAAqB,SAAA,WAAA,SAArB,yBAyMO,qBAEE,sBAAA,uBAAA,0BAAA,0BAAA,iBAAA,kBAAA,qBAAA,gCAAA,gCAAA,kBAFF,wBAAA,cAAA,eAAA,kBAAA,oBA7PP,+nGAJF,SAAqB,KAAA,WAAA,WAArB,qBAyRA,OAAA,oBAAA,iBAAA,UAAA,kBAAA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "(function () {\n  'use strict';\n\n\n  ManyToMany.$inject = ['$q', '$compile', '$timeout', '$uibModal']\n\n  function ManyToMany($q, $compile, $timeout, $uibModal) {\n\n    let template = `\n    <div class=\"row\">\n      <div class=\"col-md-6 col-xs-6\">\n        <div class=\"navbar\">\n          <label ng-hide=\"ctrl.leftListAux.length > 0\">{{ctrl.textLeftEmpty}}</label>\n          <label ng-show=\"ctrl.leftListAux.length > 0\" id=\"textinfoleft\"></label>\n          <div ng-class=\"leftsearch && ctrl.leftListAux.length == 0 && ctrl.authorizeAdd ? 'input-group' : ''\">\n            <input class=\"form-control gmd input-sm\" placeholder=\"{{ctrl.textLeftPlaceholder}}\" ng-change=\"ctrl.filterLeft(leftsearch)\" ng-model=\"leftsearch\"/>\n            <span class=\"bar\"></span>\n            <div ng-click=\"ctrl.addNew(leftsearch)\" ng-show=\"leftsearch && ctrl.leftListAux.length == 0 && ctrl.authorizeAdd\" class=\"input-group-addon hover\">\n              <i class=\"glyphicon glyphicon-plus\"></i>\n            </div>\n          </div>\n        </div>\n        <div class=\"panel gmd\">\n          <div class=\"panel-heading \">{{ctrl.textHeadingLeft}}</div>\n          <ul class=\"list-group\" style=\"height: {{ctrl.boxHeight}};max-height:{{ctrl.boxHeight}};overflow: auto;\">\n            <li class=\"list-group-item hover\" ng-repeat=\"$value in ctrl.leftListAux track by $index\" ng-click=\"ctrl.removeOrAdd(ctrl.leftListAux, ctrl.rightList, $value, $index, $event)\">\n              <span name=\"fieldleft\"></span>\n            </li>\n          </ul>\n          <div class=\"panel-footer hover\" style=\"text-align: center;\" ng-click=\"ctrl.moveAllItems(ctrl.leftListAux, ctrl.rightList, 'right')\" ng-disabled=\"ctrl.leftListAux.length == 0\">\n            {{ctrl.textMoveallLeft}}\n            <span class=\"glyphicon glyphicon-arrow-right\"></span>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-md-6 col-xs-6\">\n        <div class=\"navbar\">\n          <label ng-hide=\"ctrl.rightList.length > 0\">{{ctrl.textRightEmpty}}</label>\n          <label ng-show=\"ctrl.rightList.length > 0\" id=\"textinforight\"></label>\n          <input class=\"form-control input-sm gmd\" ng-disabled=\"!ctrl.rightSearchField\" placeholder=\"{{ctrl.textRightPlaceholder}}\" ng-change=\"ctrl.filterRight(rightsearch)\" ng-model=\"rightsearch\"/>\n          <span class=\"bar\"></span>\n        </div>\n        <div class=\"panel gmd\">\n          <div class=\"panel-heading \">{{ctrl.textHeadingRight}}</div>\n          <ul class=\"list-group\" ng-cloak style=\"height: {{ctrl.boxHeight}};max-height:{{ctrl.boxHeight}};overflow: auto;\">\n            <li class=\"list-group-item hover\" ng-repeat=\"$value in ctrl.rightAux track by $index\" ng-click=\"ctrl.removeOrAdd(ctrl.rightList, ctrl.leftListAux, $value, $index)\">\n              <span name=\"fieldright\">{{$value}}</span>\n            </li>\n          </ul>\n          <div class=\"panel-footer hover\" style=\"text-align: center;\" ng-click=\"ctrl.moveAllItems(ctrl.rightList, ctrl.leftListAux, 'left')\" ng-disabled=\"ctrl.rightAux.length == 0\">\n            <span class=\"glyphicon glyphicon-arrow-left\"></span> {{ctrl.textMoveallRight}}\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-xs-12\" ng-show=\"ctrl.hasInvalid\">\n        <p class=\"alert alert-danger\">{{ ctrl.validateMessage }}</p>\n      </div>\n    </div>`\n    controller.$inject = ['$scope', '$element', '$attrs', '$transclude']\n\n    function controller($scope, $element, $attrs, $transclude) {\n      let ctrl = this;\n      ctrl.fields = {};\n      if (!$attrs.authorizeAdd) ctrl.authorizeAdd = true;\n      ctrl.modalFields = $attrs.modalFields || '';\n      ctrl.boxHeight = $attrs.boxHeight || '298px';\n      ctrl.textHeadingLeft = $attrs.textHeadingLeft || 'Available';\n      ctrl.textHeadingRight = $attrs.textHeadingRight || 'Selected';\n      ctrl.textMoveallLeft = $attrs.textMoveallLeft || 'Move all items';\n      ctrl.textMoveallRight = $attrs.textMoveallRight || 'Move all items';\n      ctrl.textLeftEmpty = $attrs.textLeftEmpty || 'Empty List';\n      ctrl.textRightEmpty = $attrs.textRightEmpty || 'Empty List';\n      ctrl.textLeftPlaceholder = $attrs.textLeftPlaceholder || 'Filter';\n      ctrl.textRightPlaceholder = $attrs.textRightPlaceholder || 'Filter';\n      ctrl.validateMessage = $attrs.validateMessage || 'Invalid item';\n      ctrl.hasInvalid = false;\n      ctrl.textLeft = $attrs.textLeft || 'Showing {{$value}} {{$value > 1 ? \\'items\\': \\'item\\'}}';\n      ctrl.textRight = $attrs.textRight || 'Showing {{$value}} {{$value > 1 ? \\'items\\': \\'item\\'}}';\n      ctrl.rightList = ctrl.rightList || [];\n      ctrl.rightAux = angular.copy(ctrl.rightList);\n      ctrl.leftList = ctrl.leftList || [];\n      ctrl.rightSearchField = $attrs.rightSearchField || null;\n      let eventHandler = {\n        listChange: ($attrs.onListChange ? ctrl.onListChange : angular.noop),\n        validateItem: ($attrs.validateItem ? ctrl.validateItem : () => { return true }),\n        newValueAdded: ($attrs.onNewValueAdded ? ctrl.onNewValueAdded : angular.noop),\n        valueVisualizationOpened: ($attrs.onValueVisualizationOpened ? ctrl.onValueVisualizationOpened : angular.noop),\n        valueVisualizationClosed: ($attrs.onValueVisualizationClosed ? ctrl.onValueVisualizationClosed : angular.noop)\n      };\n\n      ctrl.filterLeft = function (q) {\n        ctrl.leftSearch({ param: q });\n      }\n\n      $scope.$watch('ctrl.leftList', function (data) {\n        replaceLabels();\n        ctrl.removeDuplicates();\n      })\n\n      $scope.$watch('ctrl.rightList', function (data) {\n        ctrl.rightAux = angular.copy(ctrl.rightList);\n        replaceLabels();\n      }, true)\n\n      ctrl.filterRight = function (param) {\n        if (ctrl.rightSearchField) ctrl.rightAux = ctrl.rightList.filter(obj => obj[ctrl.rightSearchField].toLowerCase().indexOf(param.toLowerCase()) > -1);\n        ctrl.removeDuplicates();\n        replaceLabels();\n      }\n\n      ctrl.moveAllItems = function (fromList, toList, position) {\n        let validList = fromList.filter(value => {\n          return eventHandler.validateItem({ value: value })\n        })\n        if (fromList.length > validList.length) ctrl.hasInvalid = true;\n        if (position == \"left\") ctrl.leftList = toList.concat(validList);\n        if (position == \"right\") ctrl.rightList = toList.concat(validList);\n        fromList.splice(0, fromList.length);\n        ctrl.rightAux = angular.copy(ctrl.rightList);\n        if (position == \"right\") ctrl.filterLeft('');\n        ctrl.removeDuplicates();\n        replaceLabels();\n        $scope.rightsearch = '';\n        $scope.leftsearch = '';\n      }\n\n      function replaceLabels() {\n        let replaceLeft = '<span name=\"fieldleft\"><span >'.concat(ctrl.fields.left).concat('</span><i ng-click=\"ctrl.openModal($event, $value)\" class=\"pull-right glyphicon glyphicon-exclamation-sign hover-icon-blue\"></i></span>');\n        let replaceRight = '<span name=\"fieldright\"><span>'.concat(ctrl.fields.right).concat('</span><i ng-click=\"ctrl.openModal($event, $value)\" class=\"pull-right glyphicon glyphicon-exclamation-sign hover-icon-blue\"></i></span>');\n        $timeout(() => {\n          [].slice.call(document.getElementsByName('fieldleft')).forEach((label, index) => {\n            angular.element(label).replaceWith($compile(replaceLeft)(angular.element(label).scope()));\n          });\n          [].slice.call(document.getElementsByName('fieldright')).forEach((div, index) => {\n            angular.element(div).replaceWith($compile(replaceRight)(angular.element(div).scope()));\n          });\n        })\n      }\n\n      function hasKeyInModalFields(key) {\n        return ctrl.modalFields.replace(/\\s/g, '').split(',').filter(obj => {\n          return obj == key;\n        }).length > 0;\n      }\n\n      ctrl.openModal = function (event, obj) {\n        event.stopImmediatePropagation();\n        ctrl.template =\n        '<div class=\"modal-body\">\\n';\n        for (var key in obj) if (obj.hasOwnProperty(key) && key != '$$hashKey' && key != 'oi' && key != 'version') {\n          if (hasKeyInModalFields(key) || !ctrl.modalFields) {\n            ctrl.template += '  <div class=\"form-group\">\\n';\n            ctrl.template += '    <label><small>' + key + '</small></label>\\n';\n            ctrl.template += '    <input type=\"text\" ng-model=\"$value.' + key + '\" disabled class=\"form-control\"/>\\n';\n            ctrl.template += '  </div>\\n';\n          }\n        }\n        ctrl.template += '   <div class=\"modal-footer\">\\n';\n        ctrl.template += '       <button type=\"button\" class=\"btn btn-warning\" ng-click=\"back()\">Back</button>\\n';\n        ctrl.template += '   </div>\\n';\n        ctrl.template += '</div>\\n';\n\n        eventHandler.valueVisualizationOpened();\n        var mi = $uibModal.open({\n          template: ctrl.template,\n          size: 'sm',\n          controller: ['$scope', '$value', '$uibModalInstance', function ($scope, $value, $uibModalInstance) {\n            $scope.$value = $value;\n            $scope.back = function () {\n              $uibModalInstance.close();\n            }\n          }],\n          resolve: {\n            $value: function () {\n              return obj;\n            }\n          }\n        });\n\n        mi.result.then(function () {\n          eventHandler.valueVisualizationClosed();\n        })\n      }\n      ctrl.removeOrAdd = function (removeFrom, addTo, value, index, event) {\n        if (eventHandler.validateItem({ value: value })) {\n          removeFrom.splice(index, 1);\n          addTo.push(value);\n          replaceLabels();\n          ctrl.removeDuplicates();\n          ctrl.rightAux = angular.copy(ctrl.rightList);\n          $scope.rightsearch = '';\n          eventHandler.listChange({ value: value });\n        } else {\n          event.target.classList.toggle('invalid')\n          setTimeout(() => {\n            event.target.classList.toggle('invalid')\n          }, 1000)\n          ctrl.hasInvalid = true;\n        }\n      }\n\n      ctrl.addNew = function (value) {\n        $scope.leftsearch = '';\n        ctrl.postMethod({ value: value });\n        ctrl.filterLeft('');\n        eventHandler.newValueAdded();\n      }\n\n      function checkErrors() {\n        let errorTexts = [];\n        if (!ctrl.fields.left || !ctrl.fields.right) {\n          errorTexts.push('You have\\'nt provided the content to GumgaManyToMany directive.');\n        }\n        if (!$attrs.leftSearch) errorTexts.push('You need to enter the parameter left-search.');\n        if (!$attrs.rightList) errorTexts.push('You need to enter the parameter right-list.');\n        errorTexts.forEach(function (txt) {\n          console.error(txt);\n        });\n      }\n\n      const hasObjectInRight = obj => (ctrl.rightList.filter(rightObject => angular.equals(rightObject, obj)).length > 0);\n\n\n      ctrl.removeDuplicates = function () {\n        ctrl.leftListAux = ctrl.leftList.filter(obj => !hasObjectInRight(obj))\n      }\n\n      $transclude($scope, cloneEl => {\n        angular.forEach(cloneEl, cl => {\n          let element = angular.element(cl)[0];\n          switch (element.nodeName) {\n            case 'LEFT-FIELD': ctrl.fields.left = element.innerHTML;\n              break;\n            case 'RIGHT-FIELD': ctrl.fields.right = element.innerHTML;\n              break;\n          }\n        });\n      })\n\n      function escapeRegExp(str) {\n\t\t\t\t    return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n      }\n\n      function replaceAll(str, find, replace) {\n        return str.replace(new RegExp(escapeRegExp(find), 'g'), replace);\n      }\n\n      $timeout(() => {\n        let elementLeft = angular.element(document.getElementById('textinfoleft'));\n        elementLeft.replaceWith($compile('<label ng-show=\"ctrl.leftListAux.length > 0\">' + replaceAll(ctrl.textLeft, '$value', 'ctrl.leftListAux.length') + '</label>')(elementLeft.scope()));\n        let elementRight = angular.element(document.getElementById('textinforight'));\n        elementRight.replaceWith($compile('<label ng-show=\"ctrl.rightList.length > 0\">' + replaceAll(ctrl.textRight, '$value', 'ctrl.rightAux.length') + '</label>')(elementRight.scope()));\n      })\n\n      checkErrors();\n      replaceLabels();\n      ctrl.filterLeft('');\n    }\n\n    return {\n      restrict: 'E',\n      scope: {\n        rightList: '=rightList',\n        leftList: '=leftList',\n        leftSearch: '&leftSearch',\n        rightSearch: '&rightSearch',\n        postMethod: '&',\n        validateItem: '&?',\n        onListChange: '&?',\n        onNewValueAdded: '&?',\n        onValueVisualizationOpened: '&?',\n        onValueVisualizationClosed: '&?',\n        authorizeAdd: '=?'\n      },\n      bindToController: true,\n      transclude: true,\n      controllerAs: 'ctrl',\n      controller,\n      template\n    }\n  }\n\n\n  angular.module('gumga.manytomany', ['ui.bootstrap'])\n    .directive('gumgaManyToMany', ManyToMany)\n})();\n"
  ]
}