!function(e){function t(a){if(o[a])return o[a].exports;var r=o[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var o={};t.m=e,t.c=o,t.i=function(e){return e},t.d=function(e,o,a){t.o(e,o)||Object.defineProperty(e,o,{configurable:!1,enumerable:!0,get:a})},t.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(o,"a",o),o},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=3)}([function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function(e,t,o,a,r){e.value={},e.factoryData=angular.copy(t),e.getCitiesByUF=function(t){delete e.value.localization,delete e.value.premisse,delete e.ceps,o.getLocations(t,r).then(function(t){e.cities=t.data})},e.getPremisseByUFAndCity=function(t,a){delete e.value.premisse,delete e.ceps,o.getPremisseByUFAndCity(t,a,r).then(function(t){e.premisses=t.data})},e.searchCep=function(t,a,n){n&&a&&t&&(e.lookingZipCode=!0,o.searchCepByUfAndCityAndPremisse(t,a,n,r).then(function(t){e.ceps=t.data,e.lookingZipCode=!1}))},e.select=function(e){a.close(e)}};a.$inject=["$scope","factoryData","GumgaAddressService","$uibModalInstance","apiSearchCep"],t.default=a},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default='\n\n<div class="modal-header">\n    <h3 class="modal-title">Encontrar cep</h3>\n</div>\n<div class="modal-body" id="modal-body">\n\n  <form>\n    <div class="row">\n      <div class="col-sm-6">\n        <div class="form-group">\n           <label for="UF">UF</label>\n            <select ng-model="value.state" ng-change="getCitiesByUF(value.state)" class="form-control" ng-options="uf for uf in factoryData.ufs"></select>\n        </div>\n      </div>\n      <div class="col-sm-6">\n        <div class="form-group">\n        \t\t<label for="Localidade">Localidade</label>\n        \t\t<input type="text" typeahead-on-select="getPremisseByUFAndCity(value.state, value.localization)" ng-disabled="!value.state || cities.length == 0" placeholder="Digite para buscar..." typeahead-min-length="0" uib-typeahead="city for city in cities | filter:$viewValue | limitTo:8" ng-model="value.localization" class="form-control"/>\n        </div>\n      </div>\n    </div>\n    <div class="row">\n      <div class="col-sm-12">\n        <div class="form-group">\n            <label for="Localidade">Logradouro</label>\n            <input type="text"\n              ng-disabled="!value.state || cities.length == 0"\n              placeholder="Digite para buscar..."\n              ng-model-options="{debounce: 1000}"\n              ng-change="searchCep(value.state, value.localization, value.premisse)"\n              ng-model="value.premisse"\n              class="form-control"/>\n        </div>\n      </div>\n    </div>\n    <div class="row">\n      <div class="col-sm-12" style="max-height: 200px;overflow: auto;">\n        <label ng-if="lookingZipCode">\n          <i class="glyphicon glyphicon-refresh"></i>\n          Buscando, aguarde um momento...\n        </label>\n        <label ng-if="ceps.length == 0 && !lookingZipCode">\n          Nada encontrado com base na sua pesquisa.\n        </label>\n        <table ng-show="ceps.length > 0 && !lookingZipCode" class="table table-striped">\n            <tr>\n              <th>Bairro</th>\n              <th>Logradouro</th>\n              <th>Cep</th>\n              <th></th>\n            </tr>\n            <tr ng-repeat="cep in ceps | limitTo:20">\n              <td>{{cep.bairro}}</td>\n              <td>{{cep.logradouro}}</td>\n              <td>{{cep.cep}}</td>\n              <td>\n                <button class="gmd btn btn-primary" ng-click="select(cep)">Selecionar</button>\n              </td>\n            </tr>\n        </table>\n      </div>\n    </div>\n\n  </form>\n\n</div>\n\n'},function(e,t,o){"use strict";!function(){function e(e,t){function o(e){return e||a}var a="http://45.33.100.20/services-api";return{everyUf:["AC","AL","AP","AM","BA","CE","DF","ES","GO","MA","MT","MS","MG","PA","PB","PR","PE","PI","RJ","RN","RS","RO","RR","SC","SP","SE","TO"],everyLogradouro:["Outros","Aeroporto","Alameda","Área","Avenida","Campo","Chácara","Colônia","Condomínio","Conjunto","Distrito","Esplanada","Estação","Estrada","Favela","Fazenda","Feira","Jardim","Ladeira","Largo","Lago","Lagoa","Loteamento","Núcleo","Parque","Passarela","Pátio","Praça","Quadra","Recanto","Residencial","Rodovia","Rua","Setor","Sítio","Travessa","Trevo","Trecho","Vale","Vereda","Via","Viaduto","Viela","Via"],availableCountries:["Brasil"],returnFormattedObject:function(){return{zipCode:null,premisseType:null,premisse:null,number:null,information:null,neighbourhood:null,localization:null,state:null,country:null}},getLocations:function(t,a){return e.get(o(a)+"/public/buscar-cidades?uf="+t)},getGoogleCoords:function(e,t){function o(){a.readyState===XMLHttpRequest.DONE&&t({data:a.responseText,status:a.status})}var a;a=new XMLHttpRequest,a.onreadystatechange=o,a.open("GET","http://maps.google.com/maps/api/geocode/json?address="+e),a.send()},getPremisseByUFAndCity:function(t,a,r){return e.get(o(r)+"/public/buscar-logradouros?uf="+t+"&cidade="+a)},searchCepByUfAndCityAndPremisse:function(t,a,r,n){return e.get(o(n)+"/public/buscar-endereco-completo?uf="+t+"&cidade="+a+"&logradouro="+r)},getCep:function(t,a){return e.get(o(a)+"/public/busca-cep/"+t)}}}e.$inject=["$http","$q"],angular.module("gumga.address.services",[]).factory("GumgaAddressService",e)}()},function(e,t,o){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function r(e,t,o,a,r){return{restrict:"E",scope:{value:"=",onSearchCepStart:"&?",onSearchCepSuccess:"&?",onSearchCepError:"&?",apiSearchCep:"@?",coordsByCep:"@?",coordsByPremisse:"@?",coordsByNumber:"@?"},link:function(t,n,l,d){function c(e){return void 0==e||"true"==e}function u(e){return"true"==e}if(t.cities=[],function(e){for(var t in e)if(e.hasOwnProperty(t))return!1;return!0}(t.value)&&(t.value=e.returnFormattedObject()),l.countryCep=c(l.countryCep),l.street=c(l.street),l.streetNumber=c(l.streetNumber),l.complement=c(l.complement),l.neighborhood=c(l.neighborhood),l.stateCity=c(l.stateCity),l.stateCityIbge=c(l.stateCityIbge),l.latLng=c(l.latLng),l.maps=c(l.maps),l.coordsByCep=u(l.coordsByCep),l.coordsByPremisse=u(l.coordsByPremisse),l.coordsByNumber=u(l.coordsByNumber),l.stateCode&&(t.withStateCode=c(l.stateCode)),t.streetTypes=["AV","AVENIDA","RUA","ROD.","BC","TRAVESSA","ALAMEDA","VIELA","CAMINHO","ESTRADA","PRAÇA","PASSAGEM","VILA","VIADUTO","RODOVIA","BECO","ACESSO","LARGO","VIA","CAMPO","MONTE","LADEIRA","CALÇADA","LOTEAMENTO","ROTATÓRIA","PASSEIO","NÚCLEO","PARQUE","ANTIGA","LAGO","BOULEVARD","ACAMPAMENTO","COMPLEXO","CONTORNO","BALÇO","CONJUNTO","MORRO","CONDOMÍNIO","TERMINAL","ESCADA","FAVELA","COLÔNIA","RECANTO","ALTO","ILHA","JARDIM","PASSARELA","PONTE","GALERIA","VALE","VEREDA","ENTRADA","BULEVAR","TRECHO","TÚNEL","ESTACIONAMENTO","QUADRA","BOSQUE","RETORNO","PÁTIO","PRAIA","RAMAL","BAIXA","CHÁCARA","SÍTIO","UNIDADE","RESIDENCIAL","FEIRA","ESTAÇÂO","RÓTULA","CANAL","FAZENDA","RETIRO","SETOR","RAMPA","ESPLANADA","CAMPUS","BLOCO","CENTRO","MÓDULO","ESTÁDIO","ESCADARIA","AEROPORTO","SERVIDÃO","FERROVIA","TREVO","PORTO","ATALHO","DISTRITO","CORREDOR","FONTE","CÓRREGO","CIRCULAR","CAIS","SUBIDA","LAGOA","PROLONGAMENTO","DESCIDA","PARALELA","ELEVADA","RETA","PONTA","VALA","BURACO","MARINA","FORTE","PARADA","LINHA","FRANCISCO","MARECHAL","ROD.","CICLOVIA"],l.name||console.error("É necessário passar um parâmetro 'name' como identificador para GumgaAddress"),(l.street&&l.streetNumber||l.stateCity&&l.stateCityIbge)&&console.error("É necessário usar ao menos um dos elementos principais [street ou street-number e state-city ou state-city-ibge] para GumgaAddress"),!l.countryCep&&(l.onSearchCepStart||l.onSearchCepSuccess||l.onSearchCepError))throw"É necessário uso do atributo country-cep para uso das funções [on-search-cep-start / on-search-cep-success / on-search-cep-error]";var p="";p=p.concat('<div class="row"> <div class="col-md-12 col-sm-12 col-xs-12">   <accordion>\t  <accordion-group is-open="false" heading="{{::title}}">'),l.countryCep&&(p=p.concat('<div class="row"> <div class="col-md-8">\t<div class="form-group">   <label for="País">País</label>\t  <select ng-readonly="true" ng-model="value.country" class="form-control" ng-options="pais for pais in factoryData.availableCountries"></select>\t</div>\t</div> <div class="col-md-4">\t<div class="form-group">   <label for="input{{::id}}">CEP</label>   <a data-ng-click="openModal()" style="cursor: pointer;margin: 0;float: right;" class="text text-primary">Não sabe?</a> \t  <div class="input-group" style="width: 100%;">\t\t<input type="text" ng-keyup="notfound=false" class="form-control" gumga-mask="99999-999" ng-model="value.zipCode" id="input{{::id}}" ng-keypress="custom($event,value.zipCode)">\t\t<span class="input-group-btn">\t    <button ng-show="!notfound" class="btn btn-primary" type="button" ng-click="searchCep(value.zipCode)" ng-disabled="loader{{::id}}" id="buttonSearch{{::id}}"><i class="glyphicon glyphicon-search"></i></button>\t    <button ng-show="notfound" uib-popover="Cep não encontrado!" popover-trigger="\'mouseenter\'" class="btn btn-danger" type="button"><i class="glyphicon glyphicon-info-sign"></i></button>\t\t</span>   \t  </div>\t</div> </div></div>')),l.stateCity&&(p=p.concat('<div class="row">\t\t<div class="{{withStateCode ? \'col-md-2\' : \'col-md-4\'}}"><div class="form-group">   <label for="UF">UF</label>\t\t<select ng-model="value.state" class="form-control" ng-options="uf for uf in factoryData.ufs" ng-change="setStateCode(value.state)"></select></div>\t\t</div>\t\t<div class="col-md-2" ng-show="withStateCode">\t\t\t\t<div class="form-group">\t\t\t\t\t\t<label for="Bairro">Cód. UF</label>\t\t\t\t\t\t<input type="text" ng-model="value.stateCode" class="form-control"/>\t\t\t\t</div>\t\t</div>\t\t<div class="col-md-8"><div class="form-group">\t\t<label for="Localidade">Localidade</label>\t\t<input type="text" ng-model="value.localization" class="form-control"/></div>\t\t</div></div>')),l.stateCityIbge&&(p=p.concat('<div class="row">\t\t<div class="{{withStateCode ? \'col-md-2\' : \'col-md-4\'}}"><div class="form-group">   <label for="UF">UF</label>\t\t<select ng-model="value.state" class="form-control" ng-options="uf for uf in factoryData.ufs" ng-change="setStateCode(value.state)"></select></div>\t\t</div>\t\t<div class="col-md-2" ng-show="withStateCode">\t\t\t\t<div class="form-group">\t\t\t\t\t\t<label for="Bairro">Cód. UF</label>\t\t\t\t\t\t<input type="text" ng-model="value.stateCode" class="form-control"/>\t\t\t\t</div>\t\t</div>\t\t<div class="col-md-4"><div class="form-group">\t\t<label for="Localidade">Localidade</label>\t\t<input type="text" ng-model="value.localization" class="form-control"/></div>\t\t</div>\t\t<div class="col-md-4"><div class="form-group">\t\t<label for="CodIBGE{{::id}}">Cód. IBGE</label>\t\t<input type="text" ng-model="value.formalCode" class="form-control" id="CodIBGE{{::id}}"/></div>\t\t</div></div>')),l.neighborhood&&(p=p.concat('<div class="row">\t\t<div class="col-md-12">\t\t\t\t<div class="form-group">\t\t\t\t\t\t<label for="Bairro">Bairro</label>\t\t\t\t\t\t<input type="text" ng-model="value.neighbourhood" class="form-control"/>\t\t\t\t</div>\t\t</div></div>')),l.street&&(p=p.concat('<div class="row">\t\t<div class="col-md-4"><div class="form-group"> <label for="tipoLogradouro">Tipo Logradouro</label> <input type="text" ng-model="value.premisseType" typeahead-min-length="0" uib-typeahead="type for type in streetTypes | filter:$viewValue | limitTo:8" typeahead-editable="false" typeahead-show-hint="true" typeahead-min-length="0" class="form-control" typeahead-editable="false" typeahead-show-hint="true" typeahead-min-length="0"></div>\t\t</div>\t\t<div class="col-md-8"><div class="form-group"> <label for="Logradouro">Logradouro</label> <input type="text" ng-model="value.premisse" class="form-control" ng-blur="searchCoordsOnPremisse(value, true)"/></div>\t\t</div></div>')),l.streetNumber&&(p=p.concat('<div class="row">\t\t<div class="col-md-4"><div class="form-group"> <label for="tipoLogradouro">Tipo Logradouro</label> <input type="text" ng-model="value.premisseType" typeahead-min-length="0" uib-typeahead="type for type in streetTypes | filter:$viewValue | limitTo:8" typeahead-editable="false" typeahead-show-hint="true" typeahead-min-length="0" class="form-control" typeahead-editable="false" typeahead-show-hint="true" typeahead-min-length="0"></div>\t\t</div>\t\t<div class="col-md-5"><div class="form-group"> <label for="Logradouro">Logradouro</label> <input type="text" ng-model="value.premisse" class="form-control" ng-blur="searchCoordsOnPremisse(value, true)"/></div>\t\t</div>\t\t<div class="col-md-3"><div class="form-group">\t\t<label for="Número">Número</label>\t\t<input type="text" ng-model="value.number" class="form-control" id="numberInput{{::id}}" ng-blur="searchCoordsOnNumber(value, true)"/></div>\t\t</div></div>')),l.complement&&(p=p.concat('<div class="row">\t\t<div class="col-md-6">\t\t\t\t<div class="form-group">\t\t\t\t\t\t<label for="Complemento">Complemento</label>\t\t\t\t\t\t<input type="text" ng-model="value.information" class="form-control"/>\t\t\t\t</div>\t\t</div>')),l.latLng&&(p=p.concat('\t\t<div class="col-md-6">     <div class="form-group">\t\t    <label for="Latitude{{::id}}">Latitude e Longitude</label>     <div class="input-group">      <div class="input-group-btn" uib-tooltip="Visualizar mapa">        <button type="button" class="btn btn-default btn-block" ng-disabled="!value.localization" ng-click="openMaps(value)" target="_blank"><i class="glyphicon glyphicon-map-marker"></i></button>     </div>      <div class="input-group-btn" style="width:calc(50% - 24px)">        <input style="border-left: 0px; border-right: 0px;" type="text" ng-model="value.latitude" class="form-control" id="Latitude{{::id}}"/>      </div>      <input style="" type="text" ng-model="value.longitude" class="form-control" id="Longitude{{::id}}"/>      <div class="input-group-btn">         <button type="button" uib-tooltip="Buscar Coordenadas" class="btn btn-default btn-block" ng-click="searchCoords(value)"><i class="glyphicon glyphicon-globe"></i></button>     </div>    </div></div> ')),p=p.concat("\t\t\t\t\t\t</accordion-group>\t\t\t\t</accordion>\t\t</div></div>"),n.append(o(p)(t)),t.title=l.title||"Endereço",t.id=l.name,t["loader"+t.id]=!1,t["maps"+t.id]=!1,t.factoryData={ufs:e.everyUf,logs:e.everyLogradouro,availableCountries:e.availableCountries},t.value.country=t.factoryData.availableCountries[0];var m={searchCepStart:l.onSearchCepStart?t.onSearchCepStart:angular.noop,searchCepSuccess:l.onSearchCepSuccess?t.onSearchCepSuccess:angular.noop,searchCepError:l.onSearchCepError?t.onSearchCepError:angular.noop};t.openModal=function(){a.open({template:s.default,controller:i.default,size:"lg",resolve:{factoryData:t.factoryData,apiSearchCep:t.apiSearchCep}}).result.then(function(e){e&&(t.searchCep(e.cep),t.value.zipCode=e.cep,t.value.codigo_ibge=e.codigoIbgeCidade)})},t.custom=function(e,o){o&&13==e.charCode&&t.searchCep(o)},t.openMaps=function(e){e.number||(e.number="");var t="https://www.google.com.br/maps/place/"+e.premisseType+" "+e.premisse+","+e.number+","+e.localization;window.open(t)},t.searchCoords=function(o,a){if(!(o.latitude&&o.longitude&&a)){var r=angular.copy(o);for(var n in r)r[n]||(r[n]="");var s=r.premisseType+" "+r.premisse+", "+r.number+" "+r.neighbourhood+" - "+r.state+" "+r.country;e.getGoogleCoords(s,function(e){200==e.status&&(e={data:JSON.parse(e.data)},t.value.latitude=e.data.results[0].geometry.location.lat,t.value.longitude=e.data.results[0].geometry.location.lng)})}},t.searchCoordsOnPremisse=function(e,o){l.coordsByPremisse&&t.searchCoords(e,o)},t.searchCoordsOnNumber=function(e,o){l.coordsByNumber&&t.searchCoords(e,o)},t.returnLink=function(e){return e.number||(e.number=""),"https://www.google.com.br/maps/place/"+e.premisseType+" "+e.premisse+","+e.number+","+e.localization},t.searchCep=function(o){t["loader"+t.id]=!0,m.searchCepStart(),e.getCep(o,t.apiSearchCep).then(function(e){m.searchCepSuccess({$value:e.data}),t["loader"+t.id]=!1,1==parseInt(e.data.resultado)?(t.value.premisseType=e.data.tipo_logradouro?e.data.tipo_logradouro:t.value.premisseType,t.value.premisse=e.data.logradouro?e.data.logradouro:t.value.premisse,t.value.localization=e.data.cidade?e.data.cidade:t.value.localization,t.value.neighbourhood=e.data.bairro?e.data.bairro:t.value.neighbourhood,t.value.state=e.data.uf?e.data.uf:t.value.state,t.value.stateCode=e.data.codigo_estado?e.data.codigo_estado:t.value.stateCode,l.coordsByCep&&t.searchCoords(t.value),t.value.formalCode=e.data.ibge_cod_cidade?e.data.ibge_cod_cidade:t.value.formalCode,t.value.country="Brasil"):(t.notfound=!0,document.getElementById("input"+t.id).focus(),r(function(){document.getElementById("input"+t.id).select()},10))},function(e){return m.searchCepError({$value:data})})};var v={AC:12,AL:27,AP:16,AM:13,BA:29,CE:23,DF:53,ES:32,GO:52,MA:21,MT:51,MS:50,MG:31,PA:15,PB:25,PR:41,PE:26,PI:22,RJ:33,RN:24,RS:43,RO:11,RR:14,SC:42,SP:35,SE:28,TO:17};t.setStateCode=function(e){t.value.stateCode=v[e]},t.value.zipCode}}}var n=o(1),s=a(n),l=o(0),i=a(l);o(2),r.$inject=["GumgaAddressService","$http","$compile","$uibModal","$timeout"],angular.module("gumga.address",["gumga.address.services"]).directive("gumgaAddress",r)}]);