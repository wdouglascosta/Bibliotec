!function(e){function n(i){if(t[i])return t[i].exports;var l=t[i]={i:i,l:!1,exports:{}};return e[i].call(l.exports,l,l.exports,n),l.l=!0,l.exports}var t={};n.m=e,n.c=t,n.i=function(e){return e},n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:i})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},n.p="",n(n.s=0)}([function(e,n,t){"use strict";!function(){function e(){return{restrict:"E",scope:{fields:"=",useLabels:"=?"},bindToController:!0,controller:["$scope","$element","$attrs","$http","$compile","$filter",function(e,n,t,i,l,o){var a=this;a.open=function(){a.isDatePickerOpen=!a.isDatePickerOpen},setTimeout(function(){if(!a.fields)throw"O componente gumgaCustomFields requer o escopo populado com os fields para geração do template.";angular.forEach(a.fields.gumgaCustomFields,function(n){angular.isString(n.field.options)&&"SELECTION"==n.field.type&&"["==n.field.options.charAt(0)?n.field.selection=JSON.parse(n.field.options):angular.isString(n.field.options)&&"SELECTION"==n.field.type&&"["!=n.field.options.charAt(0)&&i.get(n.field.options).then(function(e){n.field.selection=e.data[n.field.optionsCollection],n.field.selection.forEach(function(e){return e[n.field.optionValueField]=e[n.field.optionValueField].toString()})},function(e){console.error(e)}),"DATE"==n.field.type&&(n.dateValue=new Date(n.dateValue),e.$apply())})},500);n.append(l('\n        <div class="row">\n          <div class="col-md-{{f.field.colSize || 12}}" ng-if="f.field.active" ng-repeat="f in ctrl.fields.gumgaCustomFields">\n            <label ng-bind="f.field.name" ng-if="!ctrl.useLabels" gumga-translate-tag="f.field.translateKey"></label>\n            <label ng-if="ctrl.useLabels">{{f.field.translateKey}}</label>\n            <div ng-switch="f.field.type" class="form-group">\n              <div ng-switch-when="TEXT">\n                <input type="text" ng-model="f.textValue" class="form-control" />\n              </div>\n              <div ng-switch-when="NUMBER">\n                <input type="number" ng-model="f.numberValue" class="form-control" />\n              </div>\n              <div ng-switch-when="DATE">\n                <gumga-date ng-model="f.dateValue"></gumga-date>\n              </div>\n              <div ng-switch-when="SELECTION">\n                <select ng-options="opt[f.field.optionValueField] as opt[f.field.optionLabelField] for opt in f.field.selection" ng-model="f.textValue" class="form-control"></select>\n              </div>\n              <div ng-switch-when="LOGIC">\n                <button type="button" class="btn" ng-class="{\'btn-success\': f.logicValue, \'btn-default\': !f.logicValue}" ng-model="f.logicValue" uib-btn-checkbox btn-checkbox-true="true" btn-checkbox-false="false">\n                  {{(f.logicValue) ? "On" : "Off" }}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        ')(e))}],controllerAs:"ctrl"}}e.$inject=[],angular.module("gumga.customfields",["gumga.date"]).directive("gumgaCustomFields",e)}()}]);